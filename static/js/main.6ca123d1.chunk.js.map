{"version":3,"sources":["assets/images/logo.svg","store/utility.ts","store/reducers/connect-four.ts","store/actions/actionTypes.ts","core/common/components/AdapterLink.tsx","components/sections/home/Home.styles.ts","components/sections/home/Home.component.tsx","components/sections/home/Home.route.tsx","store/actions/actions.ts","components/sections/connect-four/parent/ConnectFour.styles.ts","components/sections/connect-four/sections/board/Board.component.tsx","components/sections/connect-four/sections/board/Board.route.tsx","components/sections/connect-four/sections/board-config/BoardConfig.styles.ts","components/sections/connect-four/sections/board-config/BoardConfig.component.tsx","components/sections/connect-four/sections/board-config/BoardConfig.route.tsx","components/sections/connect-four/ConnectFour.routing.tsx","components/sections/connect-four/parent/ConnectFour.component.tsx","components/sections/connect-four/parent/ConnectFour.container.ts","components/sections/connect-four/parent/ConnectFour.route.tsx","components/app/App.styles.ts","components/app/App.routing.tsx","styles/js/theme.js","components/app/App.component.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","updateObject","oldObject","updatedValues","Object","objectSpread","initialState","boardGrid","boardSizeConfig","discsAmount","currentPlayer","setDiscsAmount","number","setCurrentPlayer","playerColor","startsWith","reducer","state","arguments","length","undefined","action","type","payload","AdapterLink","React","forwardRef","props","ref","react_default","a","createElement","react_router_dom","assign","innerRef","useStyles","makeStyles","theme","createStyles","homeContainer","alignItems","display","flexDirection","justifyContent","height","position","width","gameIcon","margin","padding","userSelect","@media (min-width:768px)","link","fontWeight","spacing","textDecoration","Home","classes","className","alt","src","logoImage","Button","variant","color","component","to","homeRoute","react_router","key","path","exact","HomeComponent","setBoardConfigNumber","setDiscsNumber","setBoardGrid","styles","connectFour","Board","boardRoute","_len","Array","_key","concat","match","url","render","Board_component","boardConfigContainer","title","marginBottom","containedBtn","sliderContainer","marginTop","@media (min-width: 768px)","slider","&.MuiSlider-root","palette","secondary","dark","& .MuiSlider-thumb","marginLeft","& .MuiSlider-track","& .MuiSlider-rail","light","opacity","& .MuiSlider-valueLabel","fontSize","left","& .MuiSlider-thumb .MuiSlider-valueLabel","transform","sliderTextValue","value","BoardConfig","Typography","align","Slider","defaultValue","boardSize","valueLabelFormat","aria-labelledby","valueLabelDisplay","step","min","max","onChangeCommitted","event","onChange","BoardConfig_component","onBoardSizeChange","ConnectFourRouting","boardConfigRoute","ConnectFour","this","ConnectFour_routing","Component","withStyles","ConnectFourContainer","connect","dispatch","getState","actionCreators","ConnectFourComponent","connectFourRoute","appContainer","backgroundColor","background","paper","text","primary","AppRouting","_ref","location","TransitionGroup","CSSTransition","timeout","classNames","themeConfiguration","createMuiTheme","typography","fontFamily","main","useNextVariants","h1","h2","h3","h4","body1","body2","lineHeight","caption","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","store","createStore","rootReducer","App","es","CssBaseline","MuiThemeProvider","App_routing","Boolean","window","hostname","ReactDOM","App_component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ca123d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.befdcbec.svg\";","import { GameState } from \"../core/models/state.model\";\n\nexport const updateObject = (\n  oldObject: GameState,\n  updatedValues: any\n): GameState => {\n  return {\n    ...oldObject,\n    ...updatedValues\n  };\n};\n","import { GameState } from \"../../core/models/state.model\";\nimport {\n  ConnectFourTypes,\n  ADD_DISC,\n  REMOVE_DISC,\n  SET_BOARD_GRID,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  SET_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER\n} from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState: GameState = {\n  boardGrid: [],\n  boardSizeConfig: 4,\n  discsAmount: 21,\n  currentPlayer: \"red\"\n};\n\nconst reducer = (state = initialState, action: ConnectFourTypes): GameState => {\n  switch (action.type) {\n    case ADD_DISC: {\n      return state;\n    }\n    case REMOVE_DISC: {\n      return state;\n    }\n    case SET_BOARD_GRID: {\n      return updateObject(state, {\n        boardGrid: state.boardGrid\n      } as GameState);\n    }\n    case SET_BOARD_CONFIG_NUMBER: {\n      return updateObject(state, {\n        boardSizeConfig: action.payload.number\n      } as GameState);\n    }\n    case SET_DISCS_NUMBER: {\n      return updateObject(state, {\n        discsAmount: setDiscsAmount(action.payload.number)\n      } as GameState);\n    }\n    case SET_DISCS_PLAYED_NUMBER: {\n      return state;\n    }\n    case SET_CURRENT_PLAYER: {\n      return updateObject(state, {\n        currentPlayer: setCurrentPlayer(action.payload.playerColor)\n      } as GameState);\n    }\n    case SET_GAME_OVER: {\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst setDiscsAmount = (number: number) => {\n  return 5 * number + 1;\n};\n\nconst setCurrentPlayer = (playerColor: \"red\" | \"yellow\") => {\n  return playerColor.startsWith(\"y\") ? \"red\" : \"yellow\";\n};\n\nexport default reducer;\n","export const ADD_DISC = \"ADD_DISC\";\nexport const REMOVE_DISC = \"REMOVE_DISC\";\n\nexport const SET_BOARD_GRID = \"SET_BOARD_GRID\";\nexport const SET_BOARD_CONFIG_NUMBER = \"SET_BOARD_CONFIG_NUMBER\";\nexport const SET_DISCS_NUMBER = \"SET_DISCS_NUMBER\";\nexport const SET_DISCS_PLAYED_NUMBER = \"SET_DISCS_PLAYED_NUMBER\";\nexport const SET_CURRENT_PLAYER = \"SET_CURRENT_PLAYER\";\nexport const SET_GAME_OVER = \"SET_GAME_OVER\";\n\ninterface AddDiscAction {\n  type: typeof ADD_DISC;\n  payload: any;\n}\n\ninterface RemoveDiscAction {\n  type: typeof REMOVE_DISC;\n  payload: any;\n}\n\ninterface SetBoardGridAction {\n  type: typeof SET_BOARD_GRID;\n  payload: any;\n}\n\ninterface SetBoardConfigNumberAction {\n  type: typeof SET_BOARD_CONFIG_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsNumberAction {\n  type: typeof SET_DISCS_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsPlayedNumberAction {\n  type: typeof SET_DISCS_PLAYED_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetCurrentPlayerAction {\n  type: typeof SET_CURRENT_PLAYER;\n  payload: {\n    playerColor: \"red\" | \"yellow\";\n  };\n}\n\ninterface SetGameOverAction {\n  type: typeof SET_GAME_OVER;\n  payload: boolean;\n}\n\nexport type ConnectFourTypes =\n  | AddDiscAction\n  | RemoveDiscAction\n  | SetBoardGridAction\n  | SetBoardConfigNumberAction\n  | SetDiscsNumberAction\n  | SetDiscsPlayedNumberAction\n  | SetCurrentPlayerAction\n  | SetGameOverAction;\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\n// see https://github.com/ReactTraining/react-router/issues/6056\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  (props, ref) => <Link innerRef={ref as any} {...props} />\n);\n\nexport default AdapterLink;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    homeContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    },\n    gameIcon: {\n      height: '30vh',\n      margin: 0,\n      padding: 0,\n      position: 'relative',\n      userSelect: 'none',\n      width: '80vw',\n      '@media (min-width:768px)': {\n        height: '50vh',\n        width: '35vw'\n      }\n    },\n    link: {\n      fontWeight: 'bold',\n      margin: theme.spacing(5),\n      textDecoration: 'none'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from \"react\";\n\nimport { Button } from \"@material-ui/core\";\n\nimport AdapterLink from \"../../../core/common/components/AdapterLink\";\nimport logoImage from \"../../../assets/images/logo.svg\";\nimport useStyles from \"./Home.styles\";\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.homeContainer}>\n      <img\n        alt=\"Connect Four logo\"\n        className={classes.gameIcon}\n        src={logoImage}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.link}\n        component={AdapterLink}\n        to=\"/game-config\"\n      >\n        Start Game\n      </Button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport HomeComponent from './Home.component';\n\nconst homeRoute = <Route key=\"home\" path=\"/\" exact component={HomeComponent} />;\n\nexport default homeRoute;\n","import {\n  ConnectFourTypes,\n  ADD_DISC,\n  REMOVE_DISC,\n  SET_BOARD_GRID,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  SET_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER\n} from \"./actionTypes\";\nimport { GameState } from \"../../core/models/state.model\";\n\nexport const addDisc = (payload: any): ConnectFourTypes => {\n  return {\n    type: ADD_DISC,\n    payload\n  };\n};\n\nexport const removeDisc = (payload: any): ConnectFourTypes => {\n  return {\n    type: REMOVE_DISC,\n    payload\n  };\n};\n\nexport const setBoardConfiguration = (number: number) => {\n  return (dispatch: any, getState: () => GameState) => {\n    dispatch(setBoardConfigNumber(number));\n    dispatch(setDiscsNumber(number));\n    dispatch(setBoardGrid(number));\n  };\n};\n\nexport const setBoardConfigNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_CONFIG_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setDiscsNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_DISCS_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setBoardGrid = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_GRID,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setDiscsPlayedNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_DISCS_PLAYED_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setCurrentPlayer = (\n  playerColor: \"red\" | \"yellow\"\n): ConnectFourTypes => {\n  return {\n    type: SET_CURRENT_PLAYER,\n    payload: {\n      playerColor\n    }\n  };\n};\n\nexport const setGameOver = (payload: boolean): ConnectFourTypes => {\n  return {\n    type: SET_GAME_OVER,\n    payload\n  };\n};\n","import { createStyles, Theme } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    connectFour: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    }\n  });\n\nexport default styles;\n","import React from 'react';\n\nconst Board = () => {\n  return <div>Board</div>;\n};\n\nexport default Board;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardComponent from './Board.component';\n\nconst boardRoute = (...props: any) => (\n  <Route\n    key=\"board\"\n    path={`${(props.match || {}).url}/board`}\n    exact\n    render={() => <BoardComponent {...props} />}\n  />\n);\n\nexport default boardRoute;\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    boardConfigContainer: {\n      alignItems: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      height: \"100%\",\n      position: \"absolute\",\n      width: \"100%\"\n    },\n    title: {\n      marginBottom: theme.spacing(5)\n    },\n    containedBtn: {\n      fontWeight: \"bold\"\n    },\n    sliderContainer: {\n      marginTop: theme.spacing(2),\n      width: \"60vw\",\n      \"@media (min-width: 768px)\": {\n        width: \"30vw\"\n      }\n    },\n    slider: {\n      marginTop: theme.spacing(6),\n      \"&.MuiSlider-root\": {\n        color: theme.palette.secondary.dark,\n        height: 3,\n        padding: \"13px 0\"\n      },\n      \"& .MuiSlider-thumb\": {\n        height: 27,\n        marginTop: -12,\n        marginLeft: -13,\n        width: 27\n      },\n      \"& .MuiSlider-track\": {\n        height: 3\n      },\n      \"& .MuiSlider-rail\": {\n        color: theme.palette.secondary.light,\n        opacity: 1,\n        height: 3\n      },\n      \"& .MuiSlider-valueLabel\": {\n        fontSize: \"0.65rem\",\n        left: \"calc(-50% + 10px)\"\n      },\n      \"& .MuiSlider-thumb .MuiSlider-valueLabel\": {\n        transform: \"scale(1.3) translateY(-10px)\"\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\nimport Slider from \"@material-ui/lab/Slider\";\n\nimport useStyles from \"./BoardConfig.styles\";\n\ninterface OwnProps {\n  boardSize: number | number[];\n  onChange: (value: number | number[]) => void;\n}\n\nconst BoardConfig = (props: OwnProps) => {\n  const classes = useStyles();\n\n  const onChangeHandler = (event: any, value: number | number[]) => {\n    if (props.boardSize !== value) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <div className={classes.boardConfigContainer}>\n      <Typography align=\"center\" variant=\"h2\" className={classes.title}>\n        Game Configuration\n      </Typography>\n      <Typography align=\"center\" variant=\"body1\">\n        Select the board size\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          defaultValue={props.boardSize}\n          valueLabelFormat={sliderTextValue}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"on\"\n          step={1}\n          min={4}\n          max={10}\n          onChangeCommitted={onChangeHandler}\n          className={classes.slider}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction sliderTextValue(value: number) {\n  // (2N-1) columns x (N*2) rows\n  return `${2 * value - 1}x${value + 2}`;\n}\n\nexport default BoardConfig;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardConfigComponent from './BoardConfig.component';\n\nconst boardRoute = (props: any) => {\n  return (\n    <Route\n      key=\"boardconfig\"\n      path={`${props.match.url}`}\n      exact\n      render={() => (\n        <BoardConfigComponent\n          boardSize={props.boardSizeConfig}\n          onChange={props.onBoardSizeChange}\n        />\n      )}\n    />\n  );\n};\n\nexport default boardRoute;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport boardRoute from \"./sections/board/Board.route\";\nimport boardConfigRoute from \"./sections/board-config/BoardConfig.route\";\n\nconst ConnectFourRouting: React.FC = (props: any) => (\n  <Route\n    key=\"game-config\"\n    path=\"/game-config\"\n    render={() => (\n      <Switch>\n        {[\n          boardConfigRoute(props),\n          boardRoute(props),\n          <Redirect key=\"redirect\" to=\"/game-config\" />\n        ]}\n      </Switch>\n    )}\n  />\n);\n\nexport default ConnectFourRouting;\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/styles\";\n\nimport styles from \"./ConnectFour.styles\";\nimport ConnectFourRouting from \"../ConnectFour.routing\";\n\nexport interface OwnProps {\n  classes?: any;\n}\n\nexport interface ConnectedState {\n  boardSizeConfig: number;\n}\n\nexport interface ConnectedDispatch {\n  onBoardSizeChange: (number: number) => void;\n}\n\nexport interface OwnState {}\n\nclass ConnectFour extends React.Component<\n  OwnProps & ConnectedState & ConnectedDispatch,\n  OwnState\n> {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.connectFour}>\n        <ConnectFourRouting {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ConnectFour);\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport * as actionCreators from \"../../../../store/actions/actions\";\nimport { GameState } from \"../../../../core/models/state.model\";\nimport ConnectFourComponent, {\n  OwnProps,\n  ConnectedState,\n  ConnectedDispatch\n} from \"./ConnectFour.component\";\n\nconst mapStateToProps = (state: GameState): ConnectedState => ({\n  boardSizeConfig: state.boardSizeConfig\n});\n\nconst mapDispatchToProps = (dispatch: any): ConnectedDispatch => ({\n  onBoardSizeChange: (number: number) =>\n    dispatch(actionCreators.setBoardConfiguration(number))\n});\n\nexport const ConnectFourContainer: React.ComponentClass<OwnProps> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectFourComponent);\n","import React from \"react\";\nimport { Route } from \"react-router\";\nimport { ConnectFourContainer } from \"./ConnectFour.container\";\n\nconst connectFourRoute: React.ReactNode = (\n  <Route\n    key=\"game-config\"\n    path=\"/game-config\"\n    exact\n    component={ConnectFourContainer}\n  />\n);\n\nexport default connectFourRoute;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appContainer: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      display: 'flex',\n      height: '100vh',\n      position: 'relative',\n      width: '100vw'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport homeRoute from '../sections/home/Home.route';\nimport connectFourRoute from '../sections/connect-four/parent/ConnectFour.route';\n\nimport useStyles from './App.styles';\nimport '../../styles/scss/page-transitions.scss';\n\nconst AppRouting: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Route\n      render={({ location }) => (\n        <div className={classes.appContainer}>\n          <TransitionGroup>\n            <CSSTransition key={location.key} timeout={1000} classNames=\"page\">\n              <Switch location={location}>\n                {[\n                  homeRoute,\n                  connectFourRoute,\n                  <Redirect key=\"redirect\" to=\"/\" />\n                ]}\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default AppRouting;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst primaryColor = {\n  main: '#282c34'\n};\n\nconst themeConfiguration = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontSize: 16,\n    color: primaryColor,\n    useNextVariants: true,\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: '700'\n    },\n    h2: {\n      fontSize: '2rem',\n      fontWeight: '700'\n    },\n    h3: {\n      fontSize: '1.5rem',\n      fontWeight: '700'\n    },\n    h4: {\n      fontSize: '1.25rem',\n      fontWeight: '400'\n    },\n    body1: {\n      fontSize: '1rem',\n      fontWeight: '400'\n    },\n    body2: {\n      fontSize: '0.875rem',\n      fontWeight: '400',\n      lineHeight: 1\n    },\n    caption: {\n      fontSize: '0.75rem',\n      fontWeight: '400',\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default themeConfiguration;\n","import React, { FC } from \"react\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport rootReducer from \"../../store/reducers/connect-four\";\n\nimport AppRouting from \"./App.routing\";\nimport theme from \"../../styles/js/theme\";\n\nconst middlewares = [thunkMiddleware];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nconst store = createStore(rootReducer, undefined, composedEnhancers);\n\nconst App: FC = () => {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <AppRouting />\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}