{"version":3,"sources":["core/utils/objUtils.ts","core/utils/boardUtils.ts","store/reducers/connect-four.ts","store/actions/actionTypes.ts","store/configureStore.ts","assets/styles/js/theme.js","components/app/App.styles.ts","components/shared/shared-structure/SharedStructure.styles.ts","components/shared/shared-structure/SharedStructure.component.tsx","components/sections/connect-four/sections/board-panel/BoardPanel.styles.ts","components/sections/connect-four/sections/board-disc/BoardDisc.styles.ts","components/sections/connect-four/sections/board-disc/BoardDisc.component.tsx","components/sections/connect-four/sections/board-panel/BoardPanel.component.tsx","components/sections/connect-four/sections/board-options/BoardOptions.styles.ts","components/sections/connect-four/sections/board-options/BoardOptions.component.tsx","components/sections/connect-four/sections/board/Board.component.tsx","components/sections/connect-four/sections/board/Board.route.tsx","components/sections/connect-four/sections/board-config/BoardConfig.styles.ts","core/common/components/AdapterLink.tsx","components/sections/connect-four/sections/board-config/BoardConfig.component.tsx","components/sections/connect-four/sections/board-config/BoardConfig.route.tsx","components/sections/connect-four/ConnectFour.routing.tsx","core/utils/checkWinner/horizontal.ts","core/utils/checkWinner/vertical.ts","core/utils/checkWinner/diagonal.ts","core/utils/checkWinner/index.ts","store/actions/gameActions.ts","store/actions/configurationActions.ts","components/sections/connect-four/parent/ConnectFour.component.tsx","components/app/App.component.tsx","index.tsx"],"names":["updateObject","oldObject","updatedValues","Object","objectSpread","cloneDeep","isColAvailable","boardGrid","column","indexOf","boardUtils","setEmptyBoard","number","arguments","length","undefined","nColumns","nRows","board","i","push","Array","j","setDiscsAmount","isDiscPlayable","state","nColumn","discsPlayed","discsAmount","setCurrentPlayer","playerColor","startsWith","addDiscToBoard","currentPlayer","boardCopy","initialState","boardSizeConfig","gameStatus","player1","player2","reducer","action","type","payload","status","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","store","createStore","rootReducer","themeConfiguration","createMuiTheme","palette","typography","fontFamily","fontSize","color","main","useNextVariants","h1","fontWeight","h2","h3","h4","body1","body2","lineHeight","caption","useStyles","makeStyles","theme","createStyles","appContainer","backgroundColor","background","paper","text","primary","display","height","position","width","gameContainer","alignItems","flexDirection","justifyContent","SharedStructure","props","classes","react_default","a","createElement","className","children","boardContainer","borderColor","dark","borderStyle","borderRightColor","light","borderLeftColor","boxShadow","boxSizing","maxWidth","overflow","@media (min-width:768px)","borderWidth","spacing","padding","boardColumn","concat","&:hover","opacity","discSize","borderRadius","maxHeight","margin","@media(min-width: 768px)","disc","extend","cursor","transform","getDiscColor","transition","whiteDisc","redDisc","red","animationName","animationDuration","animationIterationCount","yellowDisc","yellow","@keyframes discIn","from","to","toLowerCase","BoardDisc","x","y","actions","join","onClick","addDisc","innerDiscClasses","BoardPanel","map","key","row","BoardDisc_component","assign","root","bottom","right","fab","secondary","BoardOptionsBtn","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","history","handleClick","handleOpen","handleClose","speedDialActions","icon","RefreshRounded_default","goBack","restartGame","name","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","Edit_default","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","Board","SharedStructure_component","BoardPanel_component","BoardOptions_component","boardRoute","react_router","path","exact","render","Board_component","configTitle","marginBottom","textTransform","@media(min-width:768px)","configNextBtn","marginTop","sliderContainer","@media (min-width: 768px)","slider","& .MuiSlider-thumb .MuiSlider-valueLabel","sliderRoot","sliderThumb","marginLeft","sliderTrack","sliderRail","sliderValueLabel","left","sliderMark","AdapterLink","forwardRef","ref","react_router_dom","innerRef","sliderTextValue","value","BoardConfig","Typography","align","variant","Slider","defaultValue","valueLabelFormat","aria-labelledby","valueLabelDisplay","step","min","max","onChangeCommitted","_","changeBoardSize","thumb","track","rail","valueLabel","Button","component","BoardConfig_component","ConnectFourRouting","routerProps","TransitionGroup","CSSTransition","location","timeout","classNames","boardConfigRoute","checkHorizontalDiscs","grid","rowsN","columnsN","discColor","discCount","checkVerticalDiscs","col","isTopLeft","baseCol","isTopRight","checkDiagonalDiscs","checkWinner","ConnectFourActions","classCallCheck","this","dispatch","getState","GameActions","incrementDiscsPlayedNumber","winner","alert","setGameStatus","removeDisc","ConnectFourConfigActions","setBoardConfiguration","ConfigurationActions","setBoardConfigNumber","setDiscsNumber","setBoardGridEmpty","ConnectFour","Fragment","ConnectFour_routing","Component","connect","bindActionCreators","App","es","CssBaseline","MuiThemeProvider","ConnectFour_component","ReactDOM","App_component","document","getElementById"],"mappings":"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","file":"static/js/main.a1d22297.chunk.js","sourcesContent":["import { GameState } from '../models/state.model';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport const updateObject = (\n  oldObject: GameState,\n  updatedValues: any\n): GameState => {\n  return {\n    ...cloneDeep(oldObject),\n    ...cloneDeep(updatedValues)\n  };\n};\n\nconst objUtils = {\n  updateObject\n};\nexport default objUtils;\n","import { Color } from '../models/color.model';\nimport { GameState } from '../models/state.model';\nimport cloneDeep from 'lodash/cloneDeep';\n\n/* CONFIGURATION */\n\nexport const setEmptyBoard = (number: number = 4) => {\n  const nColumns = 2 * number - 1;\n  const nRows = number + 2;\n  const board = [];\n  for (let i = 0; i < nColumns; i++) {\n    board.push(new Array(nRows));\n    for (let j = 0; j < nRows; j++) {\n      board[i][j] = null;\n    }\n  }\n  return board;\n};\n\nexport const setDiscsAmount = (number: number) => {\n  return 5 * number + 1;\n};\n\n/* GAME */\n\nexport const isDiscPlayable = (state: GameState, nColumn: number) =>\n  state.discsPlayed < state.discsAmount &&\n  isColAvailable(state.boardGrid, nColumn);\n\nexport const isColAvailable = (boardGrid: any[], column: number) => {\n  return boardGrid[column].indexOf(null) !== -1;\n};\n\nexport const setCurrentPlayer = (playerColor: Color) => {\n  return playerColor.startsWith('y') ? 'red' : 'yellow';\n};\n\nexport const addDiscToBoard = (\n  column: number,\n  boardGrid: any[],\n  currentPlayer: Color\n) => {\n  const boardCopy = cloneDeep(boardGrid);\n  let i = boardCopy[column].length - 1;\n  for (i; i >= 0; i--) {\n    if (boardCopy[column][i] === null) {\n      boardCopy[column][i] = currentPlayer;\n      break;\n    }\n  }\n  return boardCopy;\n};\n\nconst boardUtils = {\n  setEmptyBoard,\n  setDiscsAmount,\n  isDiscPlayable,\n  isColAvailable,\n  setCurrentPlayer,\n  addDiscToBoard\n};\nexport default boardUtils;\n","import { GameState } from '../../core/models/state.model';\nimport {\n  ConnectFourTypes,\n  ADD_DISC,\n  SET_BOARD_GRID_EMPTY,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  INCREMENT_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_STATUS,\n  RESTART_GAME\n} from '../actions/actionTypes';\nimport { updateObject } from '../../core/utils/objUtils';\nimport boardUtils from '../../core/utils/boardUtils';\n\nconst initialState: GameState = {\n  boardGrid: boardUtils.setEmptyBoard(4),\n  boardSizeConfig: 4,\n  discsAmount: 42,\n  discsPlayed: 0,\n  currentPlayer: 'red',\n  gameStatus: 'started',\n  player1: 'red',\n  player2: 'yellow'\n};\n\nconst reducer = (state = initialState, action: ConnectFourTypes): GameState => {\n  switch (action.type) {\n    case ADD_DISC: {\n      return updateObject(state, {\n        boardGrid: boardUtils.addDiscToBoard(\n          action.payload.column,\n          state.boardGrid,\n          state.currentPlayer\n        )\n      } as GameState);\n    }\n    case SET_BOARD_GRID_EMPTY: {\n      return updateObject(state, {\n        boardGrid: boardUtils.setEmptyBoard(action.payload.number)\n      } as GameState);\n    }\n    case SET_BOARD_CONFIG_NUMBER: {\n      return updateObject(state, {\n        boardSizeConfig: action.payload.number\n      } as GameState);\n    }\n    case SET_DISCS_NUMBER: {\n      return updateObject(state, {\n        discsAmount: boardUtils.setDiscsAmount(action.payload.number)\n      } as GameState);\n    }\n    case INCREMENT_DISCS_PLAYED_NUMBER: {\n      return {\n        ...state,\n        discsPlayed: state.discsPlayed + 1\n      };\n    }\n    case SET_CURRENT_PLAYER: {\n      return updateObject(state, {\n        currentPlayer: boardUtils.setCurrentPlayer(action.payload.playerColor)\n      } as GameState);\n    }\n    case SET_GAME_STATUS: {\n      return {\n        ...state,\n        gameStatus: action.payload.status\n      };\n    }\n    case RESTART_GAME: {\n      return {\n        ...initialState\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { Color } from '../../core/models/color.model';\nimport { GameStatus } from '../../core/models/gameStatus.model';\n\nexport const ADD_DISC = 'ADD_DISC';\nexport const SET_BOARD_GRID_EMPTY = 'SET_BOARD_GRID_EMPTY';\nexport const SET_BOARD_CONFIG_NUMBER = 'SET_BOARD_CONFIG_NUMBER';\nexport const SET_DISCS_NUMBER = 'SET_DISCS_NUMBER';\nexport const INCREMENT_DISCS_PLAYED_NUMBER = 'INCREMENT_DISCS_PLAYED_NUMBER';\nexport const SET_CURRENT_PLAYER = 'SET_CURRENT_PLAYER';\nexport const SET_GAME_STATUS = 'SET_GAME_STATUS';\nexport const RESTART_GAME = 'RESTART_GAME';\n\ninterface AddDiscAction {\n  type: typeof ADD_DISC;\n  payload: {\n    column: number;\n  };\n}\n\ninterface SetBoardGridEmptyAction {\n  type: typeof SET_BOARD_GRID_EMPTY;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetBoardConfigNumberAction {\n  type: typeof SET_BOARD_CONFIG_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsNumberAction {\n  type: typeof SET_DISCS_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface IncrementDiscsPlayedNumberAction {\n  type: typeof INCREMENT_DISCS_PLAYED_NUMBER;\n}\n\ninterface SetCurrentPlayerAction {\n  type: typeof SET_CURRENT_PLAYER;\n  payload: {\n    playerColor: Color;\n  };\n}\n\ninterface SetGameStatusAction {\n  type: typeof SET_GAME_STATUS;\n  payload: {\n    status: GameStatus;\n  };\n}\n\ninterface RestartGameAction {\n  type: typeof RESTART_GAME;\n}\n\nexport type ConnectFourTypes =\n  | AddDiscAction\n  | SetBoardGridEmptyAction\n  | SetBoardConfigNumberAction\n  | SetDiscsNumberAction\n  | IncrementDiscsPlayedNumberAction\n  | SetCurrentPlayerAction\n  | SetGameStatusAction\n  | RestartGameAction;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers/connect-four';\n\nconst middlewares = [thunkMiddleware];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nconst store = createStore(rootReducer, undefined, composedEnhancers);\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst primaryColor = {\n  main: '#282c34'\n};\n\nconst themeConfiguration = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontSize: 16,\n    color: primaryColor,\n    useNextVariants: true,\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: '700'\n    },\n    h2: {\n      fontSize: '2rem',\n      fontWeight: '700'\n    },\n    h3: {\n      fontSize: '1.5rem',\n      fontWeight: '700'\n    },\n    h4: {\n      fontSize: '1.25rem',\n      fontWeight: '400'\n    },\n    body1: {\n      fontSize: '1rem',\n      fontWeight: '400'\n    },\n    body2: {\n      fontSize: '0.875rem',\n      fontWeight: '400',\n      lineHeight: 1\n    },\n    caption: {\n      fontSize: '0.75rem',\n      fontWeight: '400',\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default themeConfiguration;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appContainer: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      display: 'flex',\n      height: '100vh',\n      position: 'relative',\n      width: '100vw'\n    }\n  })\n);\n\nexport default useStyles;\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    gameContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport useStyles from './SharedStructure.styles';\n\nconst SharedStructure = (props: any) => {\n  const classes = useStyles();\n\n  return <div className={classes.gameContainer}>{props.children}</div>;\n};\n\nexport default SharedStructure;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    boardContainer: {\n      background: `linear-gradient(to right, #7474BF, #348AC7)`,\n      borderColor: theme.palette.primary.dark,\n      borderStyle: 'solid',\n      borderRightColor: theme.palette.primary.light,\n      borderLeftColor: theme.palette.primary.light,\n      boxShadow: '0 0 30px #ccc',\n      boxSizing: 'border-box',\n      display: 'flex',\n      maxWidth: '90vw',\n      overflow: 'hidden',\n      '@media (min-width:768px)': {\n        borderWidth: theme.spacing(1),\n        maxWidth: '55vw',\n        padding: theme.spacing(1)\n      }\n    },\n    boardColumn: (props: any) => ({\n      maxWidth: '50px',\n      width: `calc(90vw / ${props.nColumns})`,\n      '&:hover': {\n        opacity: 0.7\n      },\n      '@media (min-width:768px)': {\n        maxWidth: '70px',\n        width: `calc(55vw / ${props.nColumns})`\n      }\n    })\n  })\n);\n\nexport default useStyles;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { red, yellow } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    discSize: (props: any) => ({\n      borderRadius: ' 50%',\n      maxHeight: '50px',\n      maxWidth: '50px',\n      margin: 0,\n      padding: 0,\n      height: `calc(85vw / ${props.nColumns})`,\n      width: `calc(85vw / ${props.nColumns})`,\n      '@media(min-width: 768px)': {\n        maxHeight: '70px',\n        maxWidth: '70px',\n        height: `calc(50vw / ${props.nColumns})`,\n        width: `calc(50vw / ${props.nColumns})`\n      }\n    }),\n    disc: (props: any) => ({\n      extend: 'discSize',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      display: 'flex',\n      justifyContent: 'center',\n      margin: '0 auto',\n      padding: 0,\n      transform: 'scale(0.9)',\n      '&:hover': {\n        backgroundColor: getDiscColor(props.color),\n        transition: 'all 250ms ease-in-out'\n      }\n    }),\n    whiteDisc: {\n      background: ' transparent'\n    },\n    redDisc: {\n      background: red['900'],\n      animationName: '$discIn',\n      animationDuration: '300ms',\n      animationIterationCount: '1'\n    },\n    yellowDisc: {\n      backgroundColor: yellow['600'],\n      animationName: '$discIn',\n      animationDuration: '300ms',\n      animationIterationCount: '1'\n    },\n    '@keyframes discIn': {\n      from: {\n        transform: 'translateY(-500px)'\n      },\n      to: {\n        transform: 'translateY(0px)'\n      }\n    }\n  })\n);\n\nconst getDiscColor = (color: string) => {\n  switch (color.toLowerCase()) {\n    case 'yellow':\n      return yellow['600'];\n    default:\n      return red['900'];\n  }\n};\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './BoardDisc.styles';\nimport { OwnProps as ParentProps } from '../board-panel/BoardPanel.component';\n\ninterface OwnProps extends ParentProps {\n  x: number;\n  y: number;\n}\n\nconst BoardDisc = (props: OwnProps) => {\n  const { x, y, boardGrid, currentPlayer, actions } = props;\n\n  const classes = useStyles({\n    nColumns: boardGrid.length,\n    color: currentPlayer\n  });\n\n  const onClickHandler = () => actions.addDisc(y);\n\n  const discClasses = () => [classes.disc, classes.discSize].join(' ');\n\n  const innerDiscClasses = () => {\n    const innerDiscClasses = [classes.discSize];\n    if (boardGrid[y][x] !== null) {\n      innerDiscClasses.push(\n        boardGrid[y][x].startsWith('r') ? classes.redDisc : classes.yellowDisc\n      );\n    } else {\n      innerDiscClasses.push(classes.whiteDisc);\n    }\n    return innerDiscClasses.join(' ');\n  };\n\n  return (\n    <div className={discClasses()} onClick={onClickHandler}>\n      <div className={innerDiscClasses()} />\n    </div>\n  );\n};\n\nexport default BoardDisc;\n","import React from 'react';\n\nimport useStyles from './BoardPanel.styles';\nimport BoardDisc from '../board-disc/BoardDisc.component';\nimport { Color } from '../../../../../core/models/color.model';\n\nexport interface OwnProps {\n  boardGrid: any[];\n  currentPlayer: Color;\n  actions: {\n    addDisc: (column: number) => void;\n  };\n}\n\nconst BoardPanel = (props: OwnProps) => {\n  const classes = useStyles({ nColumns: props.boardGrid.length });\n\n  return (\n    <div className={classes.boardContainer}>\n      {props.boardGrid.map((column: any, y: number) => {\n        return (\n          <div key={`column-${y}`} className={classes.boardColumn}>\n            {column.map((row: any, x: number) => (\n              <BoardDisc key={`row-${x}-${y}`} x={x} y={y} {...props} />\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BoardPanel;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3)\n    },\n    fab: {\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport { History } from 'history';\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Refresh from '@material-ui/icons/RefreshRounded';\n\nimport useStyles from './BoardOptions.styles';\n\ninterface OwnProps {\n  history: History;\n  actions: {\n    restartGame: () => void;\n  };\n}\n\nconst BoardOptionsBtn = (props: OwnProps) => {\n  const [open, setOpen] = React.useState(false);\n\n  const classes = useStyles();\n  const { history, actions } = props;\n\n  const handleClick = () => setOpen(!open);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleGoBack = () => {\n    history.goBack();\n    actions.restartGame();\n  };\n\n  const speedDialActions = [\n    { icon: <Refresh onClick={handleGoBack} />, name: 'Restart game' }\n  ];\n  return (\n    <SpeedDial\n      ariaLabel='options'\n      classes={{\n        root: classes.root,\n        fab: classes.fab\n      }}\n      icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n      onBlur={handleClose}\n      onClick={handleClick}\n      onClose={handleClose}\n      onFocus={handleOpen}\n      onMouseEnter={handleOpen}\n      onMouseLeave={handleClose}\n      open={open}\n    >\n      {speedDialActions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          tooltipOpen\n          onClick={handleClick}\n        />\n      ))}\n    </SpeedDial>\n  );\n};\n\nexport default BoardOptionsBtn;\n","import React from 'react';\n\nimport SharedStructure from '../../../../shared/shared-structure/SharedStructure.component';\nimport BoardPanel from '../board-panel/BoardPanel.component';\nimport BoardOptionsBtn from '../board-options/BoardOptions.component';\n\nconst Board = (props: any) => {\n  return (\n    <SharedStructure>\n      <BoardPanel {...props} />\n      <BoardOptionsBtn {...props} />\n    </SharedStructure>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardComponent from './Board.component';\n\nconst boardRoute = (props: any) => (\n  <Route\n    key='game-board'\n    path='/game-board'\n    exact\n    render={() => <BoardComponent {...props} />}\n  />\n);\nexport default boardRoute;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    configTitle: {\n      fontFamily: 'Bungee Shade, Open Sans, sans-serif',\n      fontSize: '2.5rem',\n      marginBottom: theme.spacing(5),\n      textTransform: 'uppercase',\n      '@media(min-width:768px)': {\n        fontSize: '3rem'\n      }\n    },\n    configNextBtn: {\n      fontWeight: 'bold',\n      marginTop: theme.spacing(5)\n    },\n    sliderContainer: {\n      marginTop: theme.spacing(2),\n      width: '60vw',\n      '@media (min-width: 768px)': {\n        width: '30vw'\n      }\n    },\n    slider: {\n      '& .MuiSlider-thumb .MuiSlider-valueLabel': {\n        transform: 'scale(1.3) translateY(-10px)'\n      }\n    },\n    sliderRoot: {\n      marginTop: theme.spacing(6),\n      color: theme.palette.secondary.dark,\n      height: 3,\n      padding: '13px 0'\n    },\n    sliderThumb: {\n      height: 27,\n      marginTop: -12,\n      marginLeft: -13,\n      width: 27\n    },\n    sliderTrack: {\n      height: 3\n    },\n    sliderRail: {\n      color: theme.palette.secondary.light,\n      opacity: 1,\n      height: 3\n    },\n    sliderValueLabel: {\n      fontSize: '0.65rem',\n      left: 'calc(-50% + 10px)'\n    },\n    sliderMark: {\n      backgroundColor: 'yellow'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\n// see https://github.com/ReactTraining/react-router/issues/6056\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  (props, ref) => <Link innerRef={ref as any} {...props} />\n);\n\nexport default AdapterLink;\n","import React from 'react';\n\nimport { Typography, Button } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\n\nimport useStyles from './BoardConfig.styles';\nimport AdapterLink from '../../../../../core/common/components/AdapterLink';\nimport SharedStructure from '../../../../shared/shared-structure/SharedStructure.component';\n\ninterface OwnProps {\n  boardSizeConfig: number | number[];\n  actions: {\n    changeBoardSize: (number: number | number[]) => void;\n  };\n}\n\nconst BoardConfig = (props: OwnProps) => {\n  const classes = useStyles();\n  const { actions, boardSizeConfig } = props;\n\n  const onChangeHandler = (_: any, value: number | number[]) => {\n    if (boardSizeConfig !== value) {\n      actions.changeBoardSize(value);\n    }\n  };\n\n  return (\n    <SharedStructure>\n      <Typography align='center' variant='h1' className={classes.configTitle}>\n        Connect 4\n      </Typography>\n      <Typography align='center' variant='body1'>\n        Select the board size\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          defaultValue={boardSizeConfig}\n          valueLabelFormat={sliderTextValue}\n          aria-labelledby='discrete-slider'\n          valueLabelDisplay='on'\n          step={1}\n          min={4}\n          max={10}\n          onChangeCommitted={onChangeHandler}\n          className={classes.slider}\n          classes={{\n            root: classes.sliderRoot,\n            thumb: classes.sliderThumb,\n            track: classes.sliderTrack,\n            rail: classes.sliderRail,\n            valueLabel: classes.sliderValueLabel\n          }}\n        />\n      </div>\n      <Button\n        variant='contained'\n        color='secondary'\n        to='/game-board'\n        className={classes.configNextBtn}\n        component={AdapterLink}\n      >\n        Start\n      </Button>\n    </SharedStructure>\n  );\n};\n\nfunction sliderTextValue(value: number) {\n  // (2N-1) columns x (N*2) rows\n  return `${2 * value - 1}x${value + 2}`;\n}\n\nexport default BoardConfig;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardConfigComponent from './BoardConfig.component';\n\nconst boardRoute = (props: any) => (\n  <Route\n    key='game-config'\n    path='/'\n    exact\n    render={() => <BoardConfigComponent {...props} />}\n  />\n);\nexport default boardRoute;\n","import React from 'react';\n\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport boardRoute from './sections/board/Board.route';\nimport boardConfigRoute from './sections/board-config/BoardConfig.route';\nimport '../../../assets/styles/scss/page-transitions.scss';\n\nconst ConnectFourRouting: React.FC = (props: any) => (\n  <Route\n    key='connect-four'\n    path='/'\n    children={routerProps => (\n      <TransitionGroup>\n        <CSSTransition\n          key={routerProps.location.key}\n          timeout={1000}\n          classNames='page'\n        >\n          <Switch location={routerProps.location}>\n            {[\n              boardConfigRoute({ ...props, ...routerProps }),\n              boardRoute({ ...props, ...routerProps }),\n              <Redirect key='redirect' to='/' />\n            ]}\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    )}\n  />\n);\nexport default ConnectFourRouting;\n","const checkHorizontalDiscs = (grid: any[]) => {\n  const rowsN = grid[0].length;\n  const columnsN = grid.length;\n\n  let discColor = '';\n  let discCount = 0;\n\n  for (let x = 0; x < rowsN; x++) {\n    for (let y = 0; y < columnsN; y++) {\n      let disc = grid[y][x];\n\n      if (!disc) {\n        discCount = 0;\n        discColor = '';\n        continue;\n      } else if (disc !== discColor) {\n        discCount = 1;\n        discColor = disc;\n        continue;\n      }\n\n      discCount++;\n      if (discCount === 4) {\n        return discColor;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport default checkHorizontalDiscs;\n","const checkVerticalDiscs = (grid: any[]) => {\n  const columnsN = grid.length;\n  const rowsN = grid[0].length;\n\n  let discColor = '';\n  let discCount = 0;\n\n  for (let col = 0; col < columnsN; col++) {\n    for (let row = 0; row < rowsN; row++) {\n      let disc = grid[col][row];\n\n      if (!disc) {\n        discCount = 0;\n        discColor = '';\n        continue;\n      } else if (disc !== discColor) {\n        discCount = 1;\n        discColor = disc;\n        continue;\n      }\n\n      discCount++;\n      if (discCount === 4) {\n        return discColor;\n      }\n    }\n  }\n  return null;\n};\n\nexport default checkVerticalDiscs;\n","const matchReq = 4;\n\nconst checkDiagonalDiscs = (grid: any[]) => {\n  const rowsN = grid[0].length;\n  const columnsN = grid.length;\n  return isTopRight(grid, columnsN, rowsN) || isTopLeft(grid, columnsN, rowsN);\n};\n\nconst isTopLeft = (grid: any[], columnsN: number, rowsN: number) => {\n  let discCount;\n  let discColor;\n  let col;\n\n  let baseCol = matchReq - rowsN;\n  for (baseCol; baseCol < columnsN - (matchReq - 1); baseCol++) {\n    discCount = 0;\n    discColor = '';\n    col = baseCol - 1;\n\n    for (let row = 0; row < rowsN; row++) {\n      col++;\n      if (col >= 0 && col < columnsN && row < rowsN) {\n        let disc = grid[col][row];\n        if (!disc) {\n          discCount = 0;\n        }\n        if (!!disc && !!discColor) {\n          if (disc !== discColor) {\n            discCount = 0;\n          } else {\n            discCount++;\n          }\n        }\n        discColor = disc;\n        if (discCount + 1 === matchReq) {\n          return discColor;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nconst isTopRight = (grid: any[], columnsN: number, rowsN: number) => {\n  let discCount;\n  let discColor;\n  let col;\n\n  let baseCol = matchReq - rowsN;\n  for (baseCol; baseCol < columnsN - (matchReq - 1); baseCol++) {\n    discCount = 0;\n    discColor = '';\n    col = baseCol - 1;\n    for (let row = rowsN - 1; row >= 0; row--) {\n      col++;\n      if (col >= 0 && col < columnsN && row < rowsN) {\n        let disc = grid[col][row];\n        if (!disc) {\n          discCount = 0;\n        }\n        if (!!disc && !!discColor) {\n          if (disc !== discColor) {\n            discCount = 0;\n          } else {\n            discCount++;\n          }\n        }\n        discColor = disc;\n        if (discCount + 1 === matchReq) {\n          return discColor;\n        }\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default checkDiagonalDiscs;\n","import checkHorizontalDiscs from './horizontal';\nimport checkVerticalDiscs from './vertical';\nimport checkDiagonalDiscs from './diagonal';\n\nconst checkWinner = (grid: any[]) => {\n  return (\n    checkVerticalDiscs(grid) ||\n    checkHorizontalDiscs(grid) ||\n    checkDiagonalDiscs(grid)\n  );\n};\n\nexport default checkWinner;\n","import { Dispatch } from 'react';\n\nimport {\n  ConnectFourTypes,\n  ADD_DISC,\n  INCREMENT_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_STATUS,\n  RESTART_GAME\n} from './actionTypes';\nimport { Color } from '../../core/models/color.model';\nimport { GameState } from '../../core/models/state.model';\nimport { GameStatus } from '../../core/models/gameStatus.model';\nimport boardUtils from '../../core/utils/boardUtils';\nimport checkWinner from '../../core/utils/checkWinner';\n\nexport class ConnectFourActions {\n  static addDiscToBoard = (column: number) => (\n    dispatch: Dispatch<any>,\n    getState: () => GameState\n  ) => {\n    if (getState().gameStatus !== 'started') return;\n\n    if (boardUtils.isDiscPlayable(getState(), column)) {\n      dispatch(GameActions.addDisc(column));\n      dispatch(GameActions.incrementDiscsPlayedNumber());\n      dispatch(GameActions.setCurrentPlayer(getState().currentPlayer));\n\n      let winner = checkWinner(getState().boardGrid);\n      if (winner === 'red') {\n        alert('Red player wins!');\n        dispatch(GameActions.setGameStatus('player1_wins'));\n      }\n      if (winner === 'yellow') {\n        alert('Yellow player wins!');\n        dispatch(GameActions.setGameStatus('player2_wins'));\n      }\n    }\n\n    if (getState().discsPlayed > getState().discsAmount) {\n      alert('Draw!');\n      dispatch(GameActions.setGameStatus('draw'));\n    }\n  };\n\n  static removeDisc = (payload: { column: number }) => (\n    dispatch: Dispatch<any>\n  ) => {};\n\n  static restartGame = () => (dispatch: Dispatch<any>) =>\n    dispatch(GameActions.restartGame());\n\n  static setGameStatus = () => (dispatch: Dispatch<any>) =>\n    dispatch(GameActions.setGameStatus('draw'));\n}\n\nclass GameActions {\n  static addDisc = (column: number): ConnectFourTypes => ({\n    type: ADD_DISC,\n    payload: {\n      column\n    }\n  });\n\n  static incrementDiscsPlayedNumber = (): ConnectFourTypes => ({\n    type: INCREMENT_DISCS_PLAYED_NUMBER\n  });\n\n  static setCurrentPlayer = (playerColor: Color): ConnectFourTypes => ({\n    type: SET_CURRENT_PLAYER,\n    payload: {\n      playerColor\n    }\n  });\n\n  static setGameStatus = (status: GameStatus): ConnectFourTypes => ({\n    type: SET_GAME_STATUS,\n    payload: { status }\n  });\n\n  static restartGame = (): ConnectFourTypes => ({\n    type: RESTART_GAME\n  });\n}\n","import { Dispatch } from 'react';\nimport {\n  ConnectFourTypes,\n  SET_BOARD_GRID_EMPTY,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER\n} from './actionTypes';\n\nexport class ConnectFourConfigActions {\n  static setBoardConfiguration = (number: number) => (\n    dispatch: Dispatch<any>\n  ) => {\n    dispatch(ConfigurationActions.setBoardConfigNumber(number));\n    dispatch(ConfigurationActions.setDiscsNumber(number));\n    dispatch(ConfigurationActions.setBoardGridEmpty(number));\n  };\n}\n\nclass ConfigurationActions {\n  static setBoardConfigNumber = (number: number): ConnectFourTypes => ({\n    type: SET_BOARD_CONFIG_NUMBER,\n    payload: {\n      number\n    }\n  });\n\n  static setDiscsNumber = (number: number): ConnectFourTypes => ({\n    type: SET_DISCS_NUMBER,\n    payload: {\n      number\n    }\n  });\n\n  static setBoardGridEmpty = (number: number): ConnectFourTypes => ({\n    type: SET_BOARD_GRID_EMPTY,\n    payload: {\n      number\n    }\n  });\n}\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport ConnectFourRouting from '../ConnectFour.routing';\nimport { GameState } from '../../../../core/models/state.model';\nimport { Color } from '../../../../core/models/color.model';\nimport { ConnectFourActions } from '../../../../store/actions/gameActions';\nimport { ConnectFourConfigActions } from '../../../../store/actions/configurationActions';\nimport { GameStatus } from '../../../../core/models/gameStatus.model';\n\nexport interface ConnectedState {\n  boardGrid: any;\n  boardSizeConfig: number;\n  currentPlayer: Color;\n  gameStatus: GameStatus;\n}\n\nclass ConnectFour extends React.Component<ConnectedState> {\n  render() {\n    return (\n      <>\n        <ConnectFourRouting {...this.props} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GameState): ConnectedState => ({\n  boardGrid: state.boardGrid,\n  boardSizeConfig: state.boardSizeConfig,\n  currentPlayer: state.currentPlayer,\n  gameStatus: state.gameStatus\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  actions: bindActionCreators(\n    {\n      changeBoardSize: ConnectFourConfigActions.setBoardConfiguration,\n      addDisc: ConnectFourActions.addDiscToBoard,\n      restartGame: ConnectFourActions.restartGame\n    },\n    dispatch\n  )\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectFour);\n","import React from 'react';\n\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport store from '../../store/configureStore';\nimport theme from '../../assets/styles/js/theme';\nimport useStyles from './App.styles';\nimport ConnectFourComponent from '../sections/connect-four/parent/ConnectFour.component';\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <div className={classes.appContainer}>\n            <ConnectFourComponent />\n          </div>\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.component';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}