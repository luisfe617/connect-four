{"version":3,"sources":["../../../../Talos_Code/connect-four/src/store/utility.ts","../../../../Talos_Code/connect-four/src/store/reducers/connect-four.ts","../../../../Talos_Code/connect-four/src/store/actions/actionTypes.ts","../../../../Talos_Code/connect-four/src/store/configureStore.ts","../../../../Talos_Code/connect-four/src/assets/styles/js/theme.js","../../../../Talos_Code/connect-four/src/components/app/App.styles.ts","../../../../Talos_Code/connect-four/src/store/actions/actions.ts","../../../../Talos_Code/connect-four/src/components/shared/shared-structure/SharedStructure.styles.ts","../../../../Talos_Code/connect-four/src/components/shared/shared-structure/SharedStructure.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-panel/BoardPanel.styles.ts","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-disc/BoardDisc.styles.ts","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-disc/BoardDisc.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-panel/BoardPanel.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-options/BoardOptions.styles.ts","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-options/BoardOptions.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board/Board.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board/Board.route.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-config/BoardConfig.styles.ts","../../../../Talos_Code/connect-four/src/core/common/components/AdapterLink.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-config/BoardConfig.component.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/sections/board-config/BoardConfig.route.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/ConnectFour.routing.tsx","../../../../Talos_Code/connect-four/src/components/sections/connect-four/parent/ConnectFour.component.tsx","../../../../Talos_Code/connect-four/src/components/app/App.component.tsx","../../../../Talos_Code/connect-four/src/index.tsx"],"names":["updateObject","oldObject","updatedValues","Object","objectSpread","cloneDeep","setEmptyBoard","number","arguments","length","undefined","nColumns","nRows","board","i","push","Array","j","addDiscToBoard","column","boardGrid","currentPlayer","boardCopy","initialState","boardSizeConfig","discsAmount","discsPlayed","player1","player2","reducer","playerColor","state","action","type","payload","startsWith","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","composeWithDevTools","store","createStore","rootReducer","themeConfiguration","createMuiTheme","palette","typography","fontFamily","fontSize","color","main","useNextVariants","h1","fontWeight","h2","h3","h4","body1","body2","lineHeight","caption","useStyles","makeStyles","theme","createStyles","appContainer","backgroundColor","background","paper","text","primary","display","height","position","width","setBoardConfigNumber","setDiscsNumber","setBoardGridEmpty","addDisc","incrementDiscsPlayedNumber","setCurrentPlayer","gameContainer","alignItems","flexDirection","justifyContent","SharedStructure","props","classes","react_default","a","createElement","className","children","boardContainer","borderColor","dark","borderStyle","borderRightColor","light","borderLeftColor","borderWidth","spacing","boxShadow","boxSizing","maxWidth","overflow","padding","@media (min-width:768px)","boardColumn","concat","&:hover","opacity","discSize","borderRadius","maxHeight","margin","@media(min-width: 768px)","disc","extend","cursor","transform","getDiscColor","transition","whiteDisc","redDisc","red","animationName","animationDuration","animationIterationCount","yellowDisc","yellow","@keyframes discIn","from","to","toLowerCase","BoardDisc","x","y","onDiscAdded","join","onClick","innerDiscClasses","BoardPanel","map","key","row","BoardDisc_component","assign","root","bottom","right","fab","secondary","BoardOptionsBtn","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","history","onRestartGame","handleClick","handleOpen","handleClose","actions","icon","RestoreRounded_default","name","RefreshRounded_default","goBack","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","Edit_default","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipOpen","Board","SharedStructure_component","BoardPanel_component","BoardOptions_component","boardRoute","react_router","path","exact","render","Board_component","configTitle","marginBottom","textTransform","@media(min-width:768px)","configNextBtn","marginTop","sliderContainer","@media (min-width: 768px)","slider","& .MuiSlider-thumb .MuiSlider-valueLabel","sliderRoot","sliderThumb","marginLeft","sliderTrack","sliderRail","sliderValueLabel","left","sliderMark","AdapterLink","forwardRef","ref","react_router_dom","innerRef","sliderTextValue","value","BoardConfig","Typography","align","variant","Slider","defaultValue","boardSize","valueLabelFormat","aria-labelledby","valueLabelDisplay","step","min","max","onChangeCommitted","event","onChange","thumb","track","rail","valueLabel","Button","component","BoardConfig_component","onBoardSizeChange","ConnectFourRouting","routerProps","TransitionGroup","CSSTransition","location","timeout","classNames","boardConfigRoute","ConnectFour","Fragment","ConnectFour_routing","this","Component","connect","dispatch","getState","actionCreators","prevState","indexOf","App","es","CssBaseline","MuiThemeProvider","ConnectFour_component","ReactDOM","App_component","document","getElementById"],"mappings":"uRAIaA,EAAe,SAC1BC,EACAC,GAEA,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFE,IAAUJ,GACVI,IAAUH,KAYJI,EAAgB,WAI3B,IAJmD,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACvCG,EAAW,EAAIJ,EAAS,EACxBK,EAAQL,EAAS,EACjBM,EAAQ,GACLC,EAAI,EAAGA,EAAIH,EAAUG,IAAK,CACjCD,EAAME,KAAK,IAAIC,MAAMJ,IACrB,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAOK,IACzBJ,EAAMC,GAAGG,GAAK,KAGlB,OAAOJ,GAOIK,EAAiB,SAC5BC,EACAC,EACAC,GAIA,IAFA,IAAMC,EAAYjB,IAAUe,GACxBN,EAAIQ,EAAUH,GAAQV,OAAS,EAC3BK,GAAK,EAAGA,IACd,GAA6B,OAAzBQ,EAAUH,GAAQL,GAAa,CACjCQ,EAAUH,GAAQL,GAAKO,EACvB,MAGJ,OAAOC,GChCHC,EAA0B,CAC9BH,UAAWd,EAAc,GACzBkB,gBAAiB,EACjBC,YAAa,GACbC,YAAa,EACbL,cAAe,MACfM,QAAS,MACTC,QAAS,UAsDIC,EAnDC,WAA+D,IDZ9CC,EAJFvB,ECgBdwB,EAA8DvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtDe,EAAcS,EAAwCxB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7E,OAAQsB,EAAOC,MACb,IC9BoB,WD+BlB,OAAOjC,EAAa+B,EAAO,CACzBX,UAAWF,EACTc,EAAOE,QAAQf,OACfY,EAAMX,UACNW,EAAMV,iBAIZ,ICtCgC,uBDuC9B,OAAOrB,EAAa+B,EAAO,CACzBX,UAAWd,EAAc0B,EAAOE,QAAQ3B,UAG5C,IC1CmC,0BD2CjC,OAAOP,EAAa+B,EAAO,CACzBP,gBAAiBQ,EAAOE,QAAQ3B,SAGpC,IC9C4B,mBD+C1B,OAAOP,EAAa+B,EAAO,CACzBN,aDvCuBlB,ECuCKyB,EAAOE,QAAQ3B,ODtC1C,EAAIA,EAAS,KCyClB,IClDyC,gCDmDvC,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACF4B,EADL,CAEEL,YAAaK,EAAML,YAAc,IAGrC,ICvD8B,qBDwD5B,OAAO1B,EAAa+B,EAAO,CACzBV,eD9CyBS,EC8COE,EAAOE,QAAQJ,YD7C9CA,EAAYK,WAAW,KAAO,MAAQ,YCgD3C,IC3DyB,gBD4DvB,OAAOJ,EAET,IC7DwB,eD8DtB,OAAO5B,OAAAC,EAAA,EAAAD,CAAA,GACFoB,GAGP,QACE,OAAOQ,IEtEPK,EAAc,CAACC,KAGfC,EAAY,CAFSC,kBAAeC,WAAf,EAAmBJ,IAGxCK,EAAoBC,sBAAmBF,WAAnB,EAAuBF,GAIlCK,EAFDC,sBAAYC,OAAanC,EAAW+B,YCoCnCK,EA1CYC,YAAe,CACxCC,QAAS,CACPf,KAAM,SAERgB,WAAY,CACVC,WAAY,wBACZC,SAAU,GACVC,MAXiB,CACnBC,KAAM,WAWJC,iBAAiB,EACjBC,GAAI,CACFJ,SAAU,SACVK,WAAY,OAEdC,GAAI,CACFN,SAAU,OACVK,WAAY,OAEdE,GAAI,CACFP,SAAU,SACVK,WAAY,OAEdG,GAAI,CACFR,SAAU,UACVK,WAAY,OAEdI,MAAO,CACLT,SAAU,OACVK,WAAY,OAEdK,MAAO,CACLV,SAAU,WACVK,WAAY,MACZM,WAAY,GAEdC,QAAS,CACPZ,SAAU,UACVK,WAAY,MACZM,WAAY,0BC5BHE,EAbGC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,aAAc,CACZC,gBAAiBH,EAAMlB,QAAQsB,WAAWC,MAC1CnB,MAAOc,EAAMlB,QAAQwB,KAAKC,QAC1BC,QAAS,OACTC,OAAQ,QACRC,SAAU,WACVC,MAAO,yDC+BAC,EAAuB,SAACvE,GACnC,MAAO,CACL0B,KJvCmC,0BIwCnCC,QAAS,CACP3B,YAKOwE,EAAiB,SAACxE,GAC7B,MAAO,CACL0B,KJ/C4B,mBIgD5BC,QAAS,CACP3B,YAKOyE,EAAoB,SAACzE,GAChC,MAAO,CACL0B,KJ1DgC,uBI2DhCC,QAAS,CACP3B,YAKO0E,EAAU,SAAC9D,GACtB,MAAO,CACLc,KJpEoB,WIqEpBC,QAAS,CACPf,YAKO+D,EAA6B,WACxC,MAAO,CACLjD,KJzEyC,kCI6EhCkD,EAAmB,SAACrD,GAC/B,MAAO,CACLG,KJ9E8B,qBI+E9BC,QAAS,CACPJ,2CCvESkC,EAdGC,YAAW,kBAC3BE,YAAa,CACXiB,cAAe,CACbC,WAAY,SACZX,QAAS,OACTY,cAAe,SACfC,eAAgB,SAChBZ,OAAQ,OACRC,SAAU,WACVC,MAAO,YCFEW,EANS,SAACC,GACvB,IAAMC,EAAU1B,IAEhB,OAAO2B,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQN,eAAgBK,EAAMM,WC6BxC/B,EAjCGC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACX6B,eAAgB,CACd1B,WAAU,8CACV2B,YAAa/B,EAAMlB,QAAQyB,QAAQyB,KACnCC,YAAa,QACbC,iBAAkBlC,EAAMlB,QAAQyB,QAAQ4B,MACxCC,gBAAiBpC,EAAMlB,QAAQyB,QAAQ4B,MACvCE,YAAarC,EAAMsC,QAAQ,GAC3BC,UAAW,gBACXC,UAAW,aACXhC,QAAS,OACTiC,SAAU,OACVC,SAAU,SACVC,QAAS3C,EAAMsC,QAAQ,GACvBM,2BAA4B,CAC1BH,SAAU,SAGdI,YAAa,SAACtB,GAAD,MAAiB,CAC5BkB,SAAU,OACV9B,MAAK,eAAAmC,OAAiBvB,EAAM9E,SAAvB,KACLsG,UAAW,CACTC,QAAS,IAEXJ,2BAA4B,CAC1BH,SAAU,OACV9B,MAAK,eAAAmC,OAAiBvB,EAAM9E,SAAvB,6BC1BPqD,EAAYC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXgD,SAAU,SAAC1B,GAAD,MAAiB,CACzB2B,aAAc,OACdC,UAAW,OACXV,SAAU,OACVW,OAAQ,EACRT,QAAS,EACTlC,OAAM,eAAAqC,OAAiBvB,EAAM9E,SAAvB,KACNkE,MAAK,eAAAmC,OAAiBvB,EAAM9E,SAAvB,KACL4G,2BAA4B,CAC1BF,UAAW,OACXV,SAAU,OACVhC,OAAM,eAAAqC,OAAiBvB,EAAM9E,SAAvB,KACNkE,MAAK,eAAAmC,OAAiBvB,EAAM9E,SAAvB,QAGT6G,KAAM,SAAC/B,GAAD,MAAiB,CACrBgC,OAAQ,WACRpC,WAAY,SACZhB,gBAAiB,QACjBqD,OAAQ,UACRhD,QAAS,OACTa,eAAgB,SAChB+B,OAAQ,SACRT,QAAS,EACTc,UAAW,aACXV,UAAW,CACT5C,gBAAiBuD,EAAanC,EAAMrC,OACpCyE,WAAY,2BAGhBC,UAAW,CACTxD,WAAY,gBAEdyD,QAAS,CACPzD,WAAY0D,IAAI,KAChBC,cAAe,UACfC,kBAAmB,QACnBC,wBAAyB,KAE3BC,WAAY,CACV/D,gBAAiBgE,IAAO,KACxBJ,cAAe,UACfC,kBAAmB,QACnBC,wBAAyB,KAE3BG,oBAAqB,CACnBC,KAAM,CACJZ,UAAW,sBAEba,GAAI,CACFb,UAAW,wBAMbC,EAAe,SAACxE,GACpB,OAAQA,EAAMqF,eACZ,IAAK,SACH,OAAOJ,IAAO,KAChB,QACE,OAAOL,IAAI,OAIFhE,ICnCA0E,EA/BG,SAACjD,GAAe,IACxBkD,EAAgDlD,EAAhDkD,EAAGC,EAA6CnD,EAA7CmD,EAAGxH,EAA0CqE,EAA1CrE,UAAWC,EAA+BoE,EAA/BpE,cAAewH,EAAgBpD,EAAhBoD,YAElCnD,EAAU1B,EAAU,CACxBrD,SAAUS,EAAUX,OACpB2C,MAAO/B,IAmBT,OACEsE,EAAAC,EAAAC,cAAA,OAAKC,UAfmB,CAACJ,EAAQ8B,KAAM9B,EAAQyB,UAAU2B,KAAK,KAe/BC,QAjBV,kBAAMF,EAAYD,KAkBrCjD,EAAAC,EAAAC,cAAA,OAAKC,UAdgB,WACvB,IAAMkD,EAAmB,CAACtD,EAAQyB,UAQlC,OAPwB,OAApB/F,EAAUwH,GAAGD,GACfK,EAAiBjI,KACfK,EAAUwH,GAAGD,GAAGxG,WAAW,KAAOuD,EAAQqC,QAAUrC,EAAQ0C,YAG9DY,EAAiBjI,KAAK2E,EAAQoC,WAEzBkB,EAAiBF,KAAK,KAKXE,OCPPC,GAlBI,SAACxD,GAClB,IAAMC,EAAU1B,EAAU,CAAErD,SAAU8E,EAAMrE,UAAUX,SAEtD,OACEkF,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQM,gBACrBP,EAAMrE,UAAU8H,IAAI,SAAC/H,EAAayH,GACjC,OACEjD,EAAAC,EAAAC,cAAA,OAAKsD,IAAG,UAAAnC,OAAY4B,GAAK9C,UAAWJ,EAAQqB,aACzC5F,EAAO+H,IAAI,SAACE,EAAUT,GAAX,OACVhD,EAAAC,EAAAC,cAACwD,EAADlJ,OAAAmJ,OAAA,CAAWH,IAAG,OAAAnC,OAAS2B,EAAT,KAAA3B,OAAc4B,GAAKD,EAAGA,EAAGC,EAAGA,GAAOnD,kHCIhDzB,GAhBGC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXoF,KAAM,CACJ3E,SAAU,WACV4E,OAAQtF,EAAMsC,QAAQ,GACtBiD,MAAOvF,EAAMsC,QAAQ,IAEvBkD,IAAK,CACHrF,gBAAiBH,EAAMlB,QAAQ2G,UAAUtG,KACzC4D,UAAW,CACT5C,gBAAiBH,EAAMlB,QAAQ2G,UAAUzD,WC8ClC0D,GA/CS,SAACnE,GAAe,IAAAoE,EACdC,IAAMC,UAAS,GADDC,EAAA7J,OAAA8J,GAAA,EAAA9J,CAAA0J,EAAA,GAC/BK,EAD+BF,EAAA,GACzBG,EADyBH,EAAA,GAGhCtE,EAAU1B,KACRoG,EAA2B3E,EAA3B2E,QAASC,EAAkB5E,EAAlB4E,cAEXC,EAAc,kBAAMH,GAASD,IAC7BK,EAAa,kBAAMJ,GAAQ,IAC3BK,EAAc,kBAAML,GAAQ,IAM5BM,EAAU,CACd,CAAEC,KAAM/E,EAAAC,EAAAC,cAAC8E,GAAA/E,EAAD,MAAagF,KAAM,sBAC3B,CAAEF,KAAM/E,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,CAASmD,QAPE,WACnBqB,EAAQU,SACRT,OAK4CO,KAAM,iBAEpD,OACEjF,EAAAC,EAAAC,cAACkF,GAAA,EAAD,CACEC,UAAU,UACVtF,QAAS,CACP6D,KAAM7D,EAAQ6D,KACdG,IAAKhE,EAAQgE,KAEfgB,KAAM/E,EAAAC,EAAAC,cAACoF,GAAA,EAAD,CAAeC,SAAUvF,EAAAC,EAAAC,cAACsF,GAAAvF,EAAD,QAC/BwF,OAAQZ,EACRzB,QAASuB,EACTe,QAASb,EACTc,QAASf,EACTgB,aAAchB,EACdiB,aAAchB,EACdN,KAAMA,GAELO,EAAQvB,IAAI,SAAAlH,GAAM,OACjB2D,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CACEtC,IAAKnH,EAAO4I,KACZF,KAAM1I,EAAO0I,KACbgB,aAAc1J,EAAO4I,KACrBe,aAAW,EACX5C,QAASuB,QChCJsB,GATD,SAACnG,GACb,OACEE,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAACiG,GAAerG,GAChBE,EAAAC,EAAAC,cAACkG,GAAoBtG,KCFZuG,GARI,SAACvG,GAAD,OACjBE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACE9C,IAAI,aACJ+C,KAAK,cACLC,OAAK,EACLC,OAAQ,kBAAMzG,EAAAC,EAAAC,cAACwG,GAAmB5G,qCCkDvBzB,GAzDGC,YAAW,SAACC,GAAD,OAC3BC,YAAa,CACXmI,YAAa,CACXpJ,WAAY,sCACZC,SAAU,SACVoJ,aAAcrI,EAAMsC,QAAQ,GAC5BgG,cAAe,YACfC,0BAA2B,CACzBtJ,SAAU,SAGduJ,cAAe,CACblJ,WAAY,OACZmJ,UAAWzI,EAAMsC,QAAQ,IAE3BoG,gBAAiB,CACfD,UAAWzI,EAAMsC,QAAQ,GACzB3B,MAAO,OACPgI,4BAA6B,CAC3BhI,MAAO,SAGXiI,OAAQ,CACNC,2CAA4C,CAC1CpF,UAAW,iCAGfqF,WAAY,CACVL,UAAWzI,EAAMsC,QAAQ,GACzBpD,MAAOc,EAAMlB,QAAQ2G,UAAUzD,KAC/BvB,OAAQ,EACRkC,QAAS,UAEXoG,YAAa,CACXtI,OAAQ,GACRgI,WAAY,GACZO,YAAa,GACbrI,MAAO,IAETsI,YAAa,CACXxI,OAAQ,GAEVyI,WAAY,CACVhK,MAAOc,EAAMlB,QAAQ2G,UAAUtD,MAC/Ba,QAAS,EACTvC,OAAQ,GAEV0I,iBAAkB,CAChBlK,SAAU,UACVmK,KAAM,qBAERC,WAAY,CACVlJ,gBAAiB,cC7CRmJ,GAJK1D,IAAM2D,WACxB,SAAChI,EAAOiI,GAAR,OAAgB/H,EAAAC,EAAAC,cAAC8H,EAAA,EAADxN,OAAAmJ,OAAA,CAAMsE,SAAUF,GAAgBjI,MC0DlD,SAASoI,GAAgBC,GAEvB,SAAA9G,OAAU,EAAI8G,EAAQ,EAAtB,KAAA9G,OAA2B8G,EAAQ,GAGtBC,OAvDK,SAACtI,GACnB,IAAMC,EAAU1B,KAQhB,OACE2B,EAAAC,EAAAC,cAACgG,EAAD,KACElG,EAAAC,EAAAC,cAACmI,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKpI,UAAWJ,EAAQ4G,aAA3D,aAGA3G,EAAAC,EAAAC,cAACmI,GAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,SAAnC,yBAGAvI,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQkH,iBACtBjH,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CACEC,aAAc3I,EAAM4I,UACpBC,iBAAkBT,GAClBU,kBAAgB,kBAChBC,kBAAkB,KAClBC,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,kBAvBgB,SAACC,EAAYf,GAC/BrI,EAAM4I,YAAcP,GACtBrI,EAAMqJ,SAAShB,IAsBXhI,UAAWJ,EAAQoH,OACnBpH,QAAS,CACP6D,KAAM7D,EAAQsH,WACd+B,MAAOrJ,EAAQuH,YACf+B,MAAOtJ,EAAQyH,YACf8B,KAAMvJ,EAAQ0H,WACd8B,WAAYxJ,EAAQ2H,qBAI1B1H,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,CACEjB,QAAQ,YACR9K,MAAM,YACNoF,GAAG,cACH1C,UAAWJ,EAAQgH,cACnB0C,UAAW5B,IALb,WClCSxB,GAbI,SAACvG,GAAD,OACjBE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACE9C,IAAI,cACJ+C,KAAK,IACLC,OAAK,EACLC,OAAQ,kBACNzG,EAAAC,EAAAC,cAACwJ,GAAD,CACEhB,UAAW5I,EAAMjE,gBACjBsN,SAAUrJ,EAAM6J,wBCoBTC,WAvBsB,SAAC9J,GAAD,OACnCE,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CACE9C,IAAI,eACJ+C,KAAK,IACLnG,SAAU,SAAAyJ,GAAW,OACnB7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,KACE9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CACEvG,IAAKqG,EAAYG,SAASxG,IAC1ByG,QAAS,IACTC,WAAW,QAEXlK,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAQ0D,SAAUH,EAAYG,UAC3B,CACCG,GAAiB3P,OAAAC,EAAA,EAAAD,CAAA,GAAKsF,EAAU+J,IAChCxD,GAAW7L,OAAAC,EAAA,EAAAD,CAAA,GAAKsF,EAAU+J,IAC1B7J,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAU9C,IAAI,WAAWX,GAAG,eCJpCuH,oLAEF,OACEpK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoK,SAAA,KACErK,EAAAC,EAAAC,cAACoK,GAAuBC,KAAKzK,eAJXqE,IAAMqG,WAwBjBC,eAdS,SAACrO,GAAD,MAAuC,CAC7DX,UAAWW,EAAMX,UACjBI,gBAAiBO,EAAMP,gBACvBH,cAAeU,EAAMV,gBAGI,SAACgP,GAAD,MAAuC,CAChEf,kBAAmB,SAAC/O,GAAD,OACjB8P,EhBLiC,SAAC9P,GACpC,OAAO,SAAC8P,EAAeC,GACrBD,EAASvL,EAAqBvE,IAC9B8P,EAAStL,EAAexE,IACxB8P,EAASrL,EAAkBzE,KgBClBgQ,CAAqChQ,KAChDsI,YAAa,SAAC1H,GAAD,OACXkP,GhBzB2BnO,EgByBY,CAAEf,UhBxBpC,SAACkP,EAAeC,GACrB,INkB2BlP,EAAkBD,EMlBvCqP,EAAYF,IAEhBE,EAAU9O,YAAc8O,EAAU/O,cNgBTL,EMfVoP,EAAUpP,UNekBD,EMfPe,EAAQf,QNgBJ,IAArCC,EAAUD,GAAQsP,QAAQ,SMd7BJ,EAASpL,EAAQ/C,EAAQf,SACzBkP,EAASnL,KACTmL,EAASlL,EAAiBqL,EAAUnP,oBATZ,IAACa,GgB0B7BmI,cAAe,kBAAMgG,EhB2Dd,CACLpO,KJ5FwB,oBoBmCbmO,CAGbL,IClBaW,GAjBO,WACpB,IAAMhL,EAAU1B,IAEhB,OACE2B,EAAAC,EAAAC,cAAC8K,EAAA,EAAD,CAAehO,MAAOA,GACpBgD,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,KACEhI,EAAAC,EAAAC,cAAC+K,EAAA,EAAD,MACAjL,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAkB3M,MAAOA,GACvByB,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQtB,cACtBuB,EAAAC,EAAAC,cAACiL,GAAD,WCjBZC,IAAS3E,OAAOzG,EAAAC,EAAAC,cAACmL,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.59162070.chunk.js","sourcesContent":["import { Color } from '../core/models/color.model';\nimport { GameState } from '../core/models/state.model';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport const updateObject = (\n  oldObject: GameState,\n  updatedValues: any\n): GameState => {\n  return {\n    ...cloneDeep(oldObject),\n    ...cloneDeep(updatedValues)\n  };\n};\n\nexport const setDiscsAmount = (number: number) => {\n  return 5 * number + 1;\n};\n\nexport const setCurrentPlayer = (playerColor: Color) => {\n  return playerColor.startsWith('y') ? 'red' : 'yellow';\n};\n\nexport const setEmptyBoard = (number: number = 4) => {\n  const nColumns = 2 * number - 1;\n  const nRows = number + 2;\n  const board = [];\n  for (let i = 0; i < nColumns; i++) {\n    board.push(new Array(nRows));\n    for (let j = 0; j < nRows; j++) {\n      board[i][j] = null;\n    }\n  }\n  return board;\n};\n\nexport const isColAvailable = (boardGrid: any[], column: number) => {\n  return boardGrid[column].indexOf(null) !== -1;\n};\n\nexport const addDiscToBoard = (\n  column: number,\n  boardGrid: any[],\n  currentPlayer: Color\n) => {\n  const boardCopy = cloneDeep(boardGrid);\n  let i = boardCopy[column].length - 1;\n  for (i; i >= 0; i--) {\n    if (boardCopy[column][i] === null) {\n      boardCopy[column][i] = currentPlayer;\n      break;\n    }\n  }\n  return boardCopy;\n};\n","import { GameState } from '../../core/models/state.model';\nimport {\n  ConnectFourTypes,\n  ADD_DISC,\n  SET_BOARD_GRID_EMPTY,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  INCREMENT_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER,\n  RESTART_GAME\n} from '../actions/actionTypes';\nimport {\n  updateObject,\n  addDiscToBoard,\n  setDiscsAmount,\n  setCurrentPlayer,\n  setEmptyBoard\n} from '../utility';\n\nconst initialState: GameState = {\n  boardGrid: setEmptyBoard(4),\n  boardSizeConfig: 4,\n  discsAmount: 42,\n  discsPlayed: 0,\n  currentPlayer: 'red',\n  player1: 'red',\n  player2: 'yellow'\n};\n\nconst reducer = (state = initialState, action: ConnectFourTypes): GameState => {\n  switch (action.type) {\n    case ADD_DISC: {\n      return updateObject(state, {\n        boardGrid: addDiscToBoard(\n          action.payload.column,\n          state.boardGrid,\n          state.currentPlayer\n        )\n      } as GameState);\n    }\n    case SET_BOARD_GRID_EMPTY: {\n      return updateObject(state, {\n        boardGrid: setEmptyBoard(action.payload.number)\n      } as GameState);\n    }\n    case SET_BOARD_CONFIG_NUMBER: {\n      return updateObject(state, {\n        boardSizeConfig: action.payload.number\n      } as GameState);\n    }\n    case SET_DISCS_NUMBER: {\n      return updateObject(state, {\n        discsAmount: setDiscsAmount(action.payload.number)\n      } as GameState);\n    }\n    case INCREMENT_DISCS_PLAYED_NUMBER: {\n      return {\n        ...state,\n        discsPlayed: state.discsPlayed + 1\n      };\n    }\n    case SET_CURRENT_PLAYER: {\n      return updateObject(state, {\n        currentPlayer: setCurrentPlayer(action.payload.playerColor)\n      } as GameState);\n    }\n    case SET_GAME_OVER: {\n      return state;\n    }\n    case RESTART_GAME: {\n      return {\n        ...initialState\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","import { Color } from '../../core/models/color.model';\n\nexport const ADD_DISC = 'ADD_DISC';\nexport const SET_BOARD_GRID_EMPTY = 'SET_BOARD_GRID_EMPTY';\nexport const SET_BOARD_CONFIG_NUMBER = 'SET_BOARD_CONFIG_NUMBER';\nexport const SET_DISCS_NUMBER = 'SET_DISCS_NUMBER';\nexport const INCREMENT_DISCS_PLAYED_NUMBER = 'INCREMENT_DISCS_PLAYED_NUMBER';\nexport const SET_CURRENT_PLAYER = 'SET_CURRENT_PLAYER';\nexport const SET_GAME_OVER = 'SET_GAME_OVER';\nexport const RESTART_GAME = 'RESTART_GAME';\n\ninterface AddDiscAction {\n  type: typeof ADD_DISC;\n  payload: {\n    column: number;\n  };\n}\n\ninterface SetBoardGridEmptyAction {\n  type: typeof SET_BOARD_GRID_EMPTY;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetBoardConfigNumberAction {\n  type: typeof SET_BOARD_CONFIG_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsNumberAction {\n  type: typeof SET_DISCS_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface IncrementDiscsPlayedNumberAction {\n  type: typeof INCREMENT_DISCS_PLAYED_NUMBER;\n}\n\ninterface SetCurrentPlayerAction {\n  type: typeof SET_CURRENT_PLAYER;\n  payload: {\n    playerColor: Color;\n  };\n}\n\ninterface SetGameOverAction {\n  type: typeof SET_GAME_OVER;\n  payload: boolean;\n}\n\ninterface RestartGameAction {\n  type: typeof RESTART_GAME;\n}\n\nexport type ConnectFourTypes =\n  | AddDiscAction\n  | SetBoardGridEmptyAction\n  | SetBoardConfigNumberAction\n  | SetDiscsNumberAction\n  | IncrementDiscsPlayedNumberAction\n  | SetCurrentPlayerAction\n  | SetGameOverAction\n  | RestartGameAction;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers/connect-four';\n\nconst middlewares = [thunkMiddleware];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\n\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers = composeWithDevTools(...enhancers);\n\nconst store = createStore(rootReducer, undefined, composedEnhancers);\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst primaryColor = {\n  main: '#282c34'\n};\n\nconst themeConfiguration = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontSize: 16,\n    color: primaryColor,\n    useNextVariants: true,\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: '700'\n    },\n    h2: {\n      fontSize: '2rem',\n      fontWeight: '700'\n    },\n    h3: {\n      fontSize: '1.5rem',\n      fontWeight: '700'\n    },\n    h4: {\n      fontSize: '1.25rem',\n      fontWeight: '400'\n    },\n    body1: {\n      fontSize: '1rem',\n      fontWeight: '400'\n    },\n    body2: {\n      fontSize: '0.875rem',\n      fontWeight: '400',\n      lineHeight: 1\n    },\n    caption: {\n      fontSize: '0.75rem',\n      fontWeight: '400',\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default themeConfiguration;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appContainer: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      display: 'flex',\n      height: '100vh',\n      position: 'relative',\n      width: '100vw'\n    }\n  })\n);\n\nexport default useStyles;\n","import {\n  ConnectFourTypes,\n  ADD_DISC,\n  SET_BOARD_GRID_EMPTY,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  INCREMENT_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER,\n  RESTART_GAME\n} from './actionTypes';\nimport { Color } from '../../core/models/color.model';\nimport { GameState } from '../../core/models/state.model';\nimport { isColAvailable } from '../utility';\n\nexport const addDiscToBoard = (payload: { column: number }) => {\n  return (dispatch: any, getState: () => GameState) => {\n    const prevState = getState();\n    if (\n      prevState.discsPlayed < prevState.discsAmount &&\n      isColAvailable(prevState.boardGrid, payload.column)\n    ) {\n      dispatch(addDisc(payload.column));\n      dispatch(incrementDiscsPlayedNumber());\n      dispatch(setCurrentPlayer(prevState.currentPlayer));\n    }\n  };\n};\n\nexport const removeDisc = (payload: { column: number }) => {\n  return (dispatch: any, getState: () => GameState) => { };\n};\n\nexport const setBoardConfiguration = (number: number) => {\n  return (dispatch: any, getState: () => GameState) => {\n    dispatch(setBoardConfigNumber(number));\n    dispatch(setDiscsNumber(number));\n    dispatch(setBoardGridEmpty(number));\n  };\n};\n\nexport const setBoardConfigNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_CONFIG_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setDiscsNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_DISCS_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setBoardGridEmpty = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_GRID_EMPTY,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const addDisc = (column: number): ConnectFourTypes => {\n  return {\n    type: ADD_DISC,\n    payload: {\n      column\n    }\n  };\n};\n\nexport const incrementDiscsPlayedNumber = (): ConnectFourTypes => {\n  return {\n    type: INCREMENT_DISCS_PLAYED_NUMBER\n  };\n};\n\nexport const setCurrentPlayer = (playerColor: Color): ConnectFourTypes => {\n  return {\n    type: SET_CURRENT_PLAYER,\n    payload: {\n      playerColor\n    }\n  };\n};\n\nexport const setGameOver = (payload: boolean): ConnectFourTypes => {\n  return {\n    type: SET_GAME_OVER,\n    payload\n  };\n};\n\nexport const restartGame = (): ConnectFourTypes => {\n  return {\n    type: RESTART_GAME\n  };\n};\n","import { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    gameContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport useStyles from './SharedStructure.styles';\n\nconst SharedStructure = (props: any) => {\n  const classes = useStyles();\n\n  return <div className={classes.gameContainer}>{props.children}</div>;\n};\n\nexport default SharedStructure;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    boardContainer: {\n      background: `linear-gradient(to right, #7474BF, #348AC7)`,\n      borderColor: theme.palette.primary.dark,\n      borderStyle: 'solid',\n      borderRightColor: theme.palette.primary.light,\n      borderLeftColor: theme.palette.primary.light,\n      borderWidth: theme.spacing(1),\n      boxShadow: '0 0 30px #ccc',\n      boxSizing: 'border-box',\n      display: 'flex',\n      maxWidth: '90vw',\n      overflow: 'hidden',\n      padding: theme.spacing(1),\n      '@media (min-width:768px)': {\n        maxWidth: '55vw'\n      },\n    },\n    boardColumn: (props: any) => ({\n      maxWidth: '50px',\n      width: `calc(90vw / ${props.nColumns})`,\n      '&:hover': {\n        opacity: 0.7\n      },\n      '@media (min-width:768px)': {\n        maxWidth: '70px',\n        width: `calc(55vw / ${props.nColumns})`\n      }\n    })\n  })\n);\n\nexport default useStyles;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { red, yellow } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    discSize: (props: any) => ({\n      borderRadius: ' 50%',\n      maxHeight: '50px',\n      maxWidth: '50px',\n      margin: 0,\n      padding: 0,\n      height: `calc(85vw / ${props.nColumns})`,\n      width: `calc(85vw / ${props.nColumns})`,\n      '@media(min-width: 768px)': {\n        maxHeight: '70px',\n        maxWidth: '70px',\n        height: `calc(50vw / ${props.nColumns})`,\n        width: `calc(50vw / ${props.nColumns})`\n      }\n    }),\n    disc: (props: any) => ({\n      extend: 'discSize',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      cursor: 'pointer',\n      display: 'flex',\n      justifyContent: 'center',\n      margin: '0 auto',\n      padding: 0,\n      transform: 'scale(0.9)',\n      '&:hover': {\n        backgroundColor: getDiscColor(props.color),\n        transition: 'all 250ms ease-in-out'\n      }\n    }),\n    whiteDisc: {\n      background: ' transparent'\n    },\n    redDisc: {\n      background: red['900'],\n      animationName: '$discIn',\n      animationDuration: '300ms',\n      animationIterationCount: '1'\n    },\n    yellowDisc: {\n      backgroundColor: yellow['600'],\n      animationName: '$discIn',\n      animationDuration: '300ms',\n      animationIterationCount: '1'\n    },\n    '@keyframes discIn': {\n      from: {\n        transform: 'translateY(-500px)'\n      },\n      to: {\n        transform: 'translateY(0px)'\n      }\n    }\n  })\n);\n\nconst getDiscColor = (color: string) => {\n  switch (color.toLowerCase()) {\n    case 'yellow':\n      return yellow['600'];\n    default:\n      return red['900'];\n  }\n};\n\nexport default useStyles;\n","import React from 'react';\n\nimport useStyles from './BoardDisc.styles';\n\nconst BoardDisc = (props: any) => {\n  const { x, y, boardGrid, currentPlayer, onDiscAdded } = props;\n\n  const classes = useStyles({\n    nColumns: boardGrid.length,\n    color: currentPlayer\n  });\n\n  const onClickHandler = () => onDiscAdded(y);\n\n  const discClasses = () => [classes.disc, classes.discSize].join(' ');\n\n  const innerDiscClasses = () => {\n    const innerDiscClasses = [classes.discSize];\n    if (boardGrid[y][x] !== null) {\n      innerDiscClasses.push(\n        boardGrid[y][x].startsWith('r') ? classes.redDisc : classes.yellowDisc\n      );\n    } else {\n      innerDiscClasses.push(classes.whiteDisc);\n    }\n    return innerDiscClasses.join(' ');\n  };\n\n  return (\n    <div className={discClasses()} onClick={onClickHandler}>\n      <div className={innerDiscClasses()} />\n    </div>\n  );\n};\n\nexport default BoardDisc;\n","import React from 'react';\n\nimport useStyles from './BoardPanel.styles';\nimport BoardDisc from '../board-disc/BoardDisc.component';\n\nconst BoardPanel = (props: any) => {\n  const classes = useStyles({ nColumns: props.boardGrid.length });\n\n  return (\n    <div className={classes.boardContainer}>\n      {props.boardGrid.map((column: any, y: number) => {\n        return (\n          <div key={`column-${y}`} className={classes.boardColumn}>\n            {column.map((row: any, x: number) => (\n              <BoardDisc key={`row-${x}-${y}`} x={x} y={y} {...props} />\n            ))}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BoardPanel;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'absolute',\n      bottom: theme.spacing(2),\n      right: theme.spacing(3)\n    },\n    fab: {\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Restore from '@material-ui/icons/RestoreRounded';\nimport Refresh from '@material-ui/icons/RefreshRounded';\n\nimport useStyles from './BoardOptions.styles';\n\nconst BoardOptionsBtn = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n\n  const classes = useStyles();\n  const { history, onRestartGame } = props;\n\n  const handleClick = () => setOpen(!open);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleGoBack = () => {\n    history.goBack();\n    onRestartGame();\n  };\n\n  const actions = [\n    { icon: <Restore />, name: 'Undo last movement' },\n    { icon: <Refresh onClick={handleGoBack} />, name: 'Restart game' }\n  ];\n  return (\n    <SpeedDial\n      ariaLabel='options'\n      classes={{\n        root: classes.root,\n        fab: classes.fab\n      }}\n      icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n      onBlur={handleClose}\n      onClick={handleClick}\n      onClose={handleClose}\n      onFocus={handleOpen}\n      onMouseEnter={handleOpen}\n      onMouseLeave={handleClose}\n      open={open}\n    >\n      {actions.map(action => (\n        <SpeedDialAction\n          key={action.name}\n          icon={action.icon}\n          tooltipTitle={action.name}\n          tooltipOpen\n          onClick={handleClick}\n        />\n      ))}\n    </SpeedDial>\n  );\n};\n\nexport default BoardOptionsBtn;\n","import React from 'react';\n\nimport SharedStructure from '../../../../shared/shared-structure/SharedStructure.component';\nimport BoardPanel from '../board-panel/BoardPanel.component';\nimport BoardOptionsBtn from '../board-options/BoardOptions.component';\nimport {\n  ConnectedState,\n  ConnectedDispatch\n} from '../../parent/ConnectFour.component';\n\nconst Board = (props: ConnectedState & ConnectedDispatch) => {\n  return (\n    <SharedStructure>\n      <BoardPanel {...props} />\n      <BoardOptionsBtn {...props} />\n    </SharedStructure>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardComponent from './Board.component';\n\nconst boardRoute = (props: any) => (\n  <Route\n    key='game-board'\n    path='/game-board'\n    exact\n    render={() => <BoardComponent {...props} />}\n  />\n);\nexport default boardRoute;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    configTitle: {\n      fontFamily: 'Bungee Shade, Open Sans, sans-serif',\n      fontSize: '2.5rem',\n      marginBottom: theme.spacing(5),\n      textTransform: 'uppercase',\n      '@media(min-width:768px)': {\n        fontSize: '3rem'\n      }\n    },\n    configNextBtn: {\n      fontWeight: 'bold',\n      marginTop: theme.spacing(5)\n    },\n    sliderContainer: {\n      marginTop: theme.spacing(2),\n      width: '60vw',\n      '@media (min-width: 768px)': {\n        width: '30vw'\n      }\n    },\n    slider: {\n      '& .MuiSlider-thumb .MuiSlider-valueLabel': {\n        transform: 'scale(1.3) translateY(-10px)'\n      }\n    },\n    sliderRoot: {\n      marginTop: theme.spacing(6),\n      color: theme.palette.secondary.dark,\n      height: 3,\n      padding: '13px 0'\n    },\n    sliderThumb: {\n      height: 27,\n      marginTop: -12,\n      marginLeft: -13,\n      width: 27\n    },\n    sliderTrack: {\n      height: 3\n    },\n    sliderRail: {\n      color: theme.palette.secondary.light,\n      opacity: 1,\n      height: 3\n    },\n    sliderValueLabel: {\n      fontSize: '0.65rem',\n      left: 'calc(-50% + 10px)'\n    },\n    sliderMark: {\n      backgroundColor: 'yellow'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\n// see https://github.com/ReactTraining/react-router/issues/6056\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  (props, ref) => <Link innerRef={ref as any} {...props} />\n);\n\nexport default AdapterLink;\n","import React from 'react';\n\nimport { Typography, Button } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\n\nimport useStyles from './BoardConfig.styles';\nimport AdapterLink from '../../../../../core/common/components/AdapterLink';\nimport SharedStructure from '../../../../shared/shared-structure/SharedStructure.component';\n\ninterface OwnProps {\n  boardSize: number | number[];\n  onChange: (value: number | number[]) => void;\n}\n\nconst BoardConfig = (props: OwnProps) => {\n  const classes = useStyles();\n\n  const onChangeHandler = (event: any, value: number | number[]) => {\n    if (props.boardSize !== value) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <SharedStructure>\n      <Typography align='center' variant='h1' className={classes.configTitle}>\n        Connect 4\n      </Typography>\n      <Typography align='center' variant='body1'>\n        Select the board size\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          defaultValue={props.boardSize}\n          valueLabelFormat={sliderTextValue}\n          aria-labelledby='discrete-slider'\n          valueLabelDisplay='on'\n          step={1}\n          min={4}\n          max={10}\n          onChangeCommitted={onChangeHandler}\n          className={classes.slider}\n          classes={{\n            root: classes.sliderRoot,\n            thumb: classes.sliderThumb,\n            track: classes.sliderTrack,\n            rail: classes.sliderRail,\n            valueLabel: classes.sliderValueLabel\n          }}\n        />\n      </div>\n      <Button\n        variant='contained'\n        color='secondary'\n        to='/game-board'\n        className={classes.configNextBtn}\n        component={AdapterLink}\n      >\n        Start\n      </Button>\n    </SharedStructure>\n  );\n};\n\nfunction sliderTextValue(value: number) {\n  // (2N-1) columns x (N*2) rows\n  return `${2 * value - 1}x${value + 2}`;\n}\n\nexport default BoardConfig;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardConfigComponent from './BoardConfig.component';\n\nconst boardRoute = (props: any) => (\n  <Route\n    key='game-config'\n    path='/'\n    exact\n    render={() => (\n      <BoardConfigComponent\n        boardSize={props.boardSizeConfig}\n        onChange={props.onBoardSizeChange}\n      />\n    )}\n  />\n);\nexport default boardRoute;\n","import React from 'react';\n\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport boardRoute from './sections/board/Board.route';\nimport boardConfigRoute from './sections/board-config/BoardConfig.route';\nimport '../../../assets/styles/scss/page-transitions.scss';\n\nconst ConnectFourRouting: React.FC = (props: any) => (\n  <Route\n    key='connect-four'\n    path='/'\n    children={routerProps => (\n      <TransitionGroup>\n        <CSSTransition\n          key={routerProps.location.key}\n          timeout={1000}\n          classNames='page'\n        >\n          <Switch location={routerProps.location}>\n            {[\n              boardConfigRoute({ ...props, ...routerProps }),\n              boardRoute({ ...props, ...routerProps }),\n              <Redirect key='redirect' to='/' />\n            ]}\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n    )}\n  />\n);\nexport default ConnectFourRouting;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actionCreators from '../../../../store/actions/actions';\nimport { GameState } from '../../../../core/models/state.model';\nimport { Color } from '../../../../core/models/color.model';\nimport ConnectFourRouting from '../ConnectFour.routing';\n\nexport interface ConnectedState {\n  boardGrid: any;\n  boardSizeConfig: number;\n  currentPlayer: Color;\n}\n\nexport interface ConnectedDispatch {\n  onBoardSizeChange: (number: number) => void;\n  onDiscAdded: (column: number) => void;\n  onRestartGame: () => void;\n}\n\nclass ConnectFour extends React.Component<ConnectedState & ConnectedDispatch> {\n  render() {\n    return (\n      <>\n        <ConnectFourRouting {...this.props} />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: GameState): ConnectedState => ({\n  boardGrid: state.boardGrid,\n  boardSizeConfig: state.boardSizeConfig,\n  currentPlayer: state.currentPlayer\n});\n\nconst mapDispatchToProps = (dispatch: any): ConnectedDispatch => ({\n  onBoardSizeChange: (number: number) =>\n    dispatch(actionCreators.setBoardConfiguration(number)),\n  onDiscAdded: (column: number) =>\n    dispatch(actionCreators.addDiscToBoard({ column })),\n  onRestartGame: () => dispatch(actionCreators.restartGame())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectFour);\n","import React from 'react';\n\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport store from '../../store/configureStore';\nimport theme from '../../assets/styles/js/theme';\nimport useStyles from './App.styles';\nimport ConnectFourComponent from '../sections/connect-four/parent/ConnectFour.component';\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <div className={classes.appContainer}>\n            <ConnectFourComponent />\n          </div>\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.component';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}