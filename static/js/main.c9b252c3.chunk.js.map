{"version":3,"sources":["assets/images/logo.svg","store/utility.ts","store/reducers/connect-four.ts","store/actions/actionTypes.ts","core/common/components/AdapterLink.tsx","components/sections/home/Home.styles.ts","components/sections/home/Home.component.tsx","components/sections/home/Home.route.tsx","components/sections/connect-four/parent/ConnectFour.styles.ts","components/sections/connect-four/sections/board/Board.component.tsx","components/sections/connect-four/sections/board/Board.route.tsx","components/sections/connect-four/sections/board-config/BoardConfig.styles.ts","components/sections/connect-four/sections/board-config/BoardConfig.component.tsx","components/sections/connect-four/sections/board-config/BoardConfig.route.tsx","components/sections/connect-four/ConnectFour.routing.tsx","components/sections/connect-four/parent/ConnectFour.component.tsx","components/sections/connect-four/parent/ConnectFour.container.ts","store/actions/actions.ts","components/sections/connect-four/parent/ConnectFour.route.tsx","components/app/App.styles.ts","components/app/App.routing.tsx","styles/js/theme.js","components/app/App.component.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","updateObject","oldObject","updatedValues","Object","objectSpread","initialState","boardSizeConfig","discsAmount","currentPlayer","reducer","state","arguments","length","undefined","action","type","payload","number","playerColor","startsWith","AdapterLink","React","forwardRef","props","ref","react_default","a","createElement","react_router_dom","assign","innerRef","useStyles","makeStyles","theme","createStyles","homeContainer","alignItems","display","flexDirection","justifyContent","height","position","width","gameIcon","margin","padding","userSelect","@media (min-width:768px)","link","fontWeight","spacing","textDecoration","Home","classes","className","alt","src","logoImage","Button","variant","color","component","to","homeRoute","react_router","key","path","exact","HomeComponent","styles","connectFour","Board","boardRoute","_len","Array","_key","concat","match","url","render","Board_component","boardConfigContainer","containedBtn","sliderContainer","@media (min-width: 768px)","slider","marginTop","&.MuiSlider-root","palette","secondary","dark","& .MuiSlider-thumb","marginLeft","& .MuiSlider-track","& .MuiSlider-rail","light","opacity","& .MuiSlider-valueLabel","fontSize","left","sliderTextValue","value","BoardConfig","Typography","align","Slider","defaultValue","boardSize","valueLabelFormat","aria-labelledby","valueLabelDisplay","step","min","max","onChangeCommitted","event","onChange","BoardConfig_component","onBoardSizeChange","ConnectFourRouting","boardConfigRoute","ConnectFour","this","ConnectFour_routing","Component","withStyles","ConnectFourContainer","connect","dispatch","Actions","ConnectFourComponent","connectFourRoute","appContainer","backgroundColor","background","paper","text","primary","AppRouting","_ref","location","TransitionGroup","CSSTransition","timeout","classNames","themeConfiguration","createMuiTheme","typography","fontFamily","main","useNextVariants","h1","h2","h3","h4","body1","body2","lineHeight","caption","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","CssBaseline","MuiThemeProvider","App_routing","Boolean","hostname","ReactDOM","App_component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9b252c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.befdcbec.svg\";","import { GameState } from \"../core/models/state.model\";\n\nexport const updateObject = (oldObject: GameState, updatedValues: any) => {\n  return {\n    ...oldObject,\n    ...updatedValues\n  };\n};\n","import { GameState } from \"../../core/models/state.model\";\nimport {\n  ConnectFourTypes,\n  ADD_DISC,\n  REMOVE_DISC,\n  SET_BOARD_GRID,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  SET_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER\n} from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState: GameState = {\n  boardSizeConfig: 4,\n  discsAmount: 21,\n  currentPlayer: \"red\"\n};\n\nconst setCurrentPlayer = (playerColor: \"red\" | \"yellow\") => {\n  return playerColor.startsWith(\"y\") ? \"red\" : \"yellow\";\n};\n\nconst reducer = (state = initialState, action: ConnectFourTypes): GameState => {\n  switch (action.type) {\n    case ADD_DISC: {\n      return state;\n    }\n    case REMOVE_DISC: {\n      return state;\n    }\n    case SET_BOARD_GRID: {\n      return state;\n    }\n    case SET_BOARD_CONFIG_NUMBER: {\n      return updateObject(state, {\n        boardSizeConfig: action.payload.number\n      });\n    }\n    case SET_DISCS_NUMBER: {\n      return updateObject(state, {\n        discsAmount: action.payload.number\n      });\n    }\n    case SET_DISCS_PLAYED_NUMBER: {\n      return state;\n    }\n    case SET_CURRENT_PLAYER: {\n      return updateObject(state, setCurrentPlayer(action.payload.playerColor));\n    }\n    case SET_GAME_OVER: {\n      return state;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default reducer;\n","export const ADD_DISC = \"ADD_DISC\";\nexport const REMOVE_DISC = \"REMOVE_DISC\";\n\nexport const SET_BOARD_GRID = \"SET_BOARD_GRID\";\nexport const SET_BOARD_CONFIG_NUMBER = \"SET_BOARD_CONFIG_NUMBER\";\nexport const SET_DISCS_NUMBER = \"SET_DISCS_NUMBER\";\nexport const SET_DISCS_PLAYED_NUMBER = \"SET_DISCS_PLAYED_NUMBER\";\nexport const SET_CURRENT_PLAYER = \"SET_CURRENT_PLAYER\";\nexport const SET_GAME_OVER = \"SET_GAME_OVER\";\n\ninterface AddDiscAction {\n  type: typeof ADD_DISC;\n  payload: any;\n}\n\ninterface RemoveDiscAction {\n  type: typeof REMOVE_DISC;\n  payload: any;\n}\n\ninterface SetBoardGridAction {\n  type: typeof SET_BOARD_GRID;\n  payload: any;\n}\n\ninterface SetBoardConfigNumberAction {\n  type: typeof SET_BOARD_CONFIG_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsNumberAction {\n  type: typeof SET_DISCS_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetDiscsPlayedNumberAction {\n  type: typeof SET_DISCS_PLAYED_NUMBER;\n  payload: {\n    number: number;\n  };\n}\n\ninterface SetCurrentPlayerAction {\n  type: typeof SET_CURRENT_PLAYER;\n  payload: {\n    playerColor: \"red\" | \"yellow\";\n  };\n}\n\ninterface SetGameOverAction {\n  type: typeof SET_GAME_OVER;\n  payload: boolean;\n}\n\nexport type ConnectFourTypes =\n  | AddDiscAction\n  | RemoveDiscAction\n  | SetBoardGridAction\n  | SetBoardConfigNumberAction\n  | SetDiscsNumberAction\n  | SetDiscsPlayedNumberAction\n  | SetCurrentPlayerAction\n  | SetGameOverAction;\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\n\n// The usage of React.forwardRef will no longer be required for react-router-dom v6.\n// see https://github.com/ReactTraining/react-router/issues/6056\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  (props, ref) => <Link innerRef={ref as any} {...props} />\n);\n\nexport default AdapterLink;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    homeContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    },\n    gameIcon: {\n      height: '30vh',\n      margin: 0,\n      padding: 0,\n      position: 'relative',\n      userSelect: 'none',\n      width: '80vw',\n      '@media (min-width:768px)': {\n        height: '50vh',\n        width: '35vw'\n      }\n    },\n    link: {\n      fontWeight: 'bold',\n      margin: theme.spacing(5),\n      textDecoration: 'none'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Button } from '@material-ui/core';\n\nimport AdapterLink from '../../../core/common/components/AdapterLink';\nimport logoImage from '../../../assets/images/logo.svg';\nimport useStyles from './Home.styles';\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.homeContainer}>\n      <img\n        alt=\"Connect Four logo\"\n        className={classes.gameIcon}\n        src={logoImage}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.link}\n        component={AdapterLink}\n        to=\"/connect-four\"\n      >\n        Start Game\n      </Button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport HomeComponent from './Home.component';\n\nconst homeRoute = <Route key=\"home\" path=\"/\" exact component={HomeComponent} />;\n\nexport default homeRoute;\n","import { createStyles, Theme } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    connectFour: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    }\n  });\n\nexport default styles;\n","import React from 'react';\n\nconst Board = () => {\n  return <div>Board</div>;\n};\n\nexport default Board;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardComponent from './Board.component';\n\nconst boardRoute = (...props: any) => (\n  <Route\n    key=\"board\"\n    path={`${(props.match || {}).url}/board`}\n    exact\n    render={() => <BoardComponent {...props} />}\n  />\n);\n\nexport default boardRoute;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    boardConfigContainer: {\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      height: '100%',\n      position: 'absolute',\n      width: '100%'\n    },\n    containedBtn: {\n      fontWeight: 'bold'\n    },\n    sliderContainer: {\n      width: '60vw',\n      '@media (min-width: 768px)': {\n        width: '30vw'\n      }\n    },\n    slider: {\n      marginTop: theme.spacing(6),\n      '&.MuiSlider-root': {\n        color: theme.palette.secondary.dark,\n        height: 3,\n        padding: '13px 0'\n      },\n      '& .MuiSlider-thumb': {\n        height: 27,\n        marginTop: -12,\n        marginLeft: -13,\n        width: 27\n      },\n      '& .MuiSlider-track': {\n        height: 3\n      },\n      '& .MuiSlider-rail': {\n        color: theme.palette.secondary.light,\n        opacity: 1,\n        height: 3\n      },\n      '& .MuiSlider-valueLabel': {\n        fontSize: '0.65rem',\n        left: 'calc(-50% + 10px)'\n      }\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\n\nimport useStyles from './BoardConfig.styles';\n\ninterface OwnProps {\n  boardSize: number | number[];\n  onChange: (value: number | number[]) => void;\n}\n\nconst BoardConfig = (props: OwnProps) => {\n  const classes = useStyles();\n\n  const onChangeHandler = (event: any, value: number | number[]) => {\n    props.onChange(value);\n  };\n\n  return (\n    <div className={classes.boardConfigContainer}>\n      <Typography align=\"center\" variant=\"body1\">\n        Select the board size\n      </Typography>\n      <div className={classes.sliderContainer}>\n        <Slider\n          defaultValue={props.boardSize}\n          valueLabelFormat={sliderTextValue}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"on\"\n          step={1}\n          min={4}\n          max={10}\n          onChangeCommitted={onChangeHandler}\n          className={classes.slider}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction sliderTextValue(value: number) {\n  // (2N-1) columns x (N*2) rows\n  return `${2 * value - 1}x${value + 2}`;\n}\n\nexport default BoardConfig;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport BoardConfigComponent from './BoardConfig.component';\n\nconst boardRoute = (props: any) => {\n  return (\n    <Route\n      key=\"boardconfig\"\n      path={`${props.match.url}`}\n      exact\n      render={() => (\n        <BoardConfigComponent\n          boardSize={props.boardSizeConfig}\n          onChange={props.onBoardSizeChange}\n        />\n      )}\n    />\n  );\n};\n\nexport default boardRoute;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport boardRoute from './sections/board/Board.route';\nimport boardConfigRoute from './sections/board-config/BoardConfig.route';\n\nconst ConnectFourRouting: React.FC = (props: any) => (\n  <Route\n    key=\"connectfour\"\n    path=\"/connect-four\"\n    render={() => (\n      <Switch>\n        {[\n          boardConfigRoute(props),\n          boardRoute(props),\n          <Redirect key=\"redirect\" to=\"/connect-four\" />\n        ]}\n      </Switch>\n    )}\n  />\n);\n\nexport default ConnectFourRouting;\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/styles';\n\nimport styles from './ConnectFour.styles';\nimport ConnectFourRouting from '../ConnectFour.routing';\n\nexport interface OwnProps {\n  classes?: any;\n}\n\nexport interface ConnectedState {\n  boardSizeConfig: number;\n}\n\nexport interface ConnectedDispatch {\n  onBoardSizeChange: (number: number) => void;\n}\n\nexport interface OwnState {}\n\nclass ConnectFour extends React.Component<\n  OwnProps & ConnectedState & ConnectedDispatch,\n  OwnState\n> {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.connectFour}>\n        <ConnectFourRouting {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ConnectFour);\n","import { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport * as Actions from '../../../../store/actions/actions';\nimport { GameState } from '../../../../core/models/state.model';\nimport ConnectFourComponent, {\n  OwnProps,\n  ConnectedState,\n  ConnectedDispatch\n} from './ConnectFour.component';\n\nconst mapStateToProps = (state: GameState): ConnectedState => ({\n  boardSizeConfig: state.boardSizeConfig\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): ConnectedDispatch => ({\n  onBoardSizeChange: (number: number) =>\n    dispatch(Actions.setBoardConfigNumber(number))\n});\n\nexport const ConnectFourContainer: React.ComponentClass<OwnProps> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectFourComponent);\n","import {\n  ConnectFourTypes,\n  ADD_DISC,\n  REMOVE_DISC,\n  SET_BOARD_GRID,\n  SET_BOARD_CONFIG_NUMBER,\n  SET_DISCS_NUMBER,\n  SET_DISCS_PLAYED_NUMBER,\n  SET_CURRENT_PLAYER,\n  SET_GAME_OVER\n} from \"./actionTypes\";\n\nexport const addDisc = (payload: any): ConnectFourTypes => {\n  return {\n    type: ADD_DISC,\n    payload\n  };\n};\n\nexport const removeDisc = (payload: any): ConnectFourTypes => {\n  return {\n    type: REMOVE_DISC,\n    payload\n  };\n};\n\nexport const setBoardGrid = (payload: any): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_GRID,\n    payload\n  };\n};\n\nexport const setBoardConfigNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_BOARD_CONFIG_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setDiscsNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_DISCS_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setDiscsPlayedNumber = (number: number): ConnectFourTypes => {\n  return {\n    type: SET_DISCS_PLAYED_NUMBER,\n    payload: {\n      number\n    }\n  };\n};\n\nexport const setCurrentPlayer = (\n  playerColor: \"red\" | \"yellow\"\n): ConnectFourTypes => {\n  return {\n    type: SET_CURRENT_PLAYER,\n    payload: {\n      playerColor\n    }\n  };\n};\n\nexport const setGameOver = (payload: boolean): ConnectFourTypes => {\n  return {\n    type: SET_GAME_OVER,\n    payload\n  };\n};\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { ConnectFourContainer } from './ConnectFour.container';\n\nconst connectFourRoute: React.ReactNode = (\n  <Route\n    key=\"connectfour\"\n    path=\"/connect-four\"\n    exact\n    component={ConnectFourContainer}\n  />\n);\n\nexport default connectFourRoute;\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appContainer: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      display: 'flex',\n      height: '100vh',\n      position: 'relative',\n      width: '100vw'\n    }\n  })\n);\n\nexport default useStyles;\n","import React from 'react';\n\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport homeRoute from '../sections/home/Home.route';\nimport connectFourRoute from '../sections/connect-four/parent/ConnectFour.route';\n\nimport useStyles from './App.styles';\nimport '../../styles/scss/page-transitions.scss';\n\nconst AppRouting: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Route\n      render={({ location }) => (\n        <div className={classes.appContainer}>\n          <TransitionGroup>\n            <CSSTransition key={location.key} timeout={1000} classNames=\"page\">\n              <Switch location={location}>\n                {[\n                  homeRoute,\n                  connectFourRoute,\n                  <Redirect key=\"redirect\" to=\"/\" />\n                ]}\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default AppRouting;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst primaryColor = {\n  main: '#282c34'\n};\n\nconst themeConfiguration = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: {\n    fontFamily: 'Open Sans, sans-serif',\n    fontSize: 16,\n    color: primaryColor,\n    useNextVariants: true,\n    h1: {\n      fontSize: '2.5rem',\n      fontWeight: '700'\n    },\n    h2: {\n      fontSize: '2rem',\n      fontWeight: '700'\n    },\n    h3: {\n      fontSize: '1.5rem',\n      fontWeight: '700'\n    },\n    h4: {\n      fontSize: '1.25rem',\n      fontWeight: '400'\n    },\n    body1: {\n      fontSize: '1rem',\n      fontWeight: '400'\n    },\n    body2: {\n      fontSize: '0.875rem',\n      fontWeight: '400',\n      lineHeight: 1\n    },\n    caption: {\n      fontSize: '0.75rem',\n      fontWeight: '400',\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default themeConfiguration;\n","import React, { FC } from \"react\";\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport rootReducer from \"../../store/reducers/connect-four\";\n\nimport AppRouting from \"./App.routing\";\nimport theme from \"../../styles/js/theme\";\n\nconst store = createStore(\n  rootReducer,\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst App: FC = () => {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <CssBaseline />\n        <MuiThemeProvider theme={theme}>\n          <AppRouting />\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App.component';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}